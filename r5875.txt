Index: vendor/branch/5058A_Claro/packages/services/Telephony/src/com/android/phone/MobileNetworkSettings.java
===================================================================
--- vendor/branch/5058A_Claro/packages/services/Telephony/src/com/android/phone/MobileNetworkSettings.java	(revision 5874)
+++ vendor/branch/5058A_Claro/packages/services/Telephony/src/com/android/phone/MobileNetworkSettings.java	(revision 5875)
@@ -559,6 +559,9 @@
         getContentResolver().registerContentObserver(
                 Settings.Global.getUriFor(Settings.Global.ENHANCED_4G_MODE_ENABLED),
                 true, mContentObserver);
+        getContentResolver().registerContentObserver(
+                Settings.Global.getUriFor(Settings.Global.ENHANCED_4G_MODE_ENABLED_SIM2),
+                true, mContentObserver);
         if (DBG) log("onCreate:-");
     }
 
@@ -2106,22 +2109,22 @@
             log("[addEnhanced4GLteSwitchPreference] volteEnabled :"
                 + volteEnabled);
         }
-        if (mButton4glte != null) {
+        /*if (mButton4glte != null) {
             if (DBG) {
                 log("[addEnhanced4GLteSwitchPreference] Remove mButton4glte!");
             }
             preferenceScreen.removePreference(mButton4glte);
-        }
+        }*/
         if (volteEnabled && !mExt.isCtPlugin()) {
             int order = mButtonEnabledNetworks.getOrder() + 1;
-            mEnhancedButton4glte = new Enhanced4GLteSwitchPreference(this, mPhone.getSubId());
+            //mEnhancedButton4glte = new Enhanced4GLteSwitchPreference(this, mPhone.getSubId());
             /// Still use Google's key, title, and summary.
-            mEnhancedButton4glte.setKey(BUTTON_4G_LTE_KEY);
+            //mEnhancedButton4glte.setKey(BUTTON_4G_LTE_KEY);
             /// M: [CT VOLTE]
             // show "VOLTE" for CT SIM
             if (TelephonyUtilsEx.isCtVolteEnabled()
                     && TelephonyUtilsEx.isCtSim(mPhone.getSubId())) {
-                mEnhancedButton4glte.setTitle(R.string.wfc_volte_switch_title);
+                //mEnhancedButton4glte.setTitle(R.string.hd_voice_switch_title);
             } else {
                 PersistableBundle carrierConfig =
                     PhoneGlobals.getInstance().getCarrierConfigForSubId(mPhone.getSubId());
@@ -2130,7 +2133,7 @@
                 int enhanced4glteModeTitleId = useVariant4glteTitle ?
                         R.string.enhanced_4g_lte_mode_title_variant :
                         R.string.enhanced_4g_lte_mode_title;
-                mEnhancedButton4glte.setTitle(enhanced4glteModeTitleId);
+                //mEnhancedButton4glte.setTitle(enhanced4glteModeTitleId);
             }
             /// M: [CT VOLTE]
             // show "VOLTE" for CT SIM
@@ -2137,13 +2140,13 @@
             if (!TelephonyUtilsEx.isCtVolteEnabled()
                     || !TelephonyUtilsEx.isCtSim(mPhone.getSubId())) {
             /// @}
-                mEnhancedButton4glte.setSummary(R.string.enhanced_4g_lte_mode_summary);
+                //mEnhancedButton4glte.setSummary(R.string.enhanced_4g_lte_mode_summary);
             }
-            mEnhancedButton4glte.setOnPreferenceChangeListener(this);
-            mEnhancedButton4glte.setOrder(order);
+            //mEnhancedButton4glte.setOnPreferenceChangeListener(this);
+            //mEnhancedButton4glte.setOrder(order);
             //preferenceScreen.addPreference(mEnhancedButton4glte);
             ///M: Plug-in to customize the LTE switch @{
-            mExt.customizeEnhanced4GLteSwitchPreference(this, mEnhancedButton4glte);
+            //mExt.customizeEnhanced4GLteSwitchPreference(this, mEnhancedButton4glte);
             ///@}
         }
     }
@@ -2152,6 +2155,7 @@
      * Update the subId in mEnhancedButton4glte.
      */
     private void updateEnhanced4GLteSwitchPreference() {
+        /*
         if (mEnhancedButton4glte != null) {
             if (ImsManager.isVolteEnabledByPlatform(this, mPhone.getPhoneId()) &&
                     (SystemProperties.getInt("ro.mtk_multiple_ims_support", 1) == 1  &&
@@ -2168,21 +2172,23 @@
                 }
             }
             if (findPreference(BUTTON_4G_LTE_KEY) != null) {
-                if (DBG) {
-                    log("[updateEnhanced4GLteSwitchPreference] SubId = " + mPhone.getSubId());
-                }
                 mEnhancedButton4glte.setSubId(mPhone.getSubId());
                 boolean enh4glteMode = ImsManager.isEnhanced4gLteModeSettingEnabledByUser(this,
                         mPhone.getPhoneId())
                         && ImsManager.isNonTtyOrTtyOnVolteEnabled(this, mPhone.getPhoneId());
+                if (DBG) {
+                    log("[updateEnhanced4GLteSwitchPreference] SubId = " + mPhone.getSubId()
+                        + ", enh4glteMode=" + enh4glteMode);
+                }
                 mEnhancedButton4glte.setChecked(enh4glteMode);
                 /// M: update enabled state
                 updateEnhanced4glteEnableState();
             }
-        }
+        }*/
     }
 
     private void updateEnhanced4glteEnableState() {
+        /*
         if (mEnhancedButton4glte != null) {
             boolean inCall = TelecomManager.from(this).isInCall();
             boolean nontty = ImsManager.isNonTtyOrTtyOnVolteEnabled(getApplicationContext(),
@@ -2210,7 +2216,7 @@
             /// M: [CMCC DUAl VOLTE] @{
             mExt.customizeDualVolteOpHide(getPreferenceScreen(), mEnhancedButton4glte, enableForCtVolte);
             /// @}
-        }
+        }*/
     }
 
     /**
@@ -2221,21 +2227,29 @@
      * @return
      */
     private boolean onPreferenceChangeMTK(Preference preference, Object objValue) {
-        log("[onPreferenceChangeMTK] preference = " + preference.getTitle());
-        if (mEnhancedButton4glte == preference) {
+        /*
+        String volteTitle = getResources().getString(R.string.hd_voice_switch_title);
+        String lteTitle = getResources().getString(R.string.enhanced_4g_lte_mode_title);
+        log("[onPreferenceChangeMTK] Preference = " + preference.getTitle());
+
+        if ((mEnhancedButton4glte == preference) || preference.getTitle().equals(volteTitle)
+                || preference.getTitle().equals(lteTitle)) {
+            Enhanced4GLteSwitchPreference ltePref = (Enhanced4GLteSwitchPreference) preference;
             if (DBG) {
-                log("[onPreferenceChangeMTK] IsChecked = " + mEnhancedButton4glte.isChecked());
+                log("[onPreferenceChangeMTK] IsChecked = " + ltePref.isChecked());
             }
-            Enhanced4GLteSwitchPreference ltePref = (Enhanced4GLteSwitchPreference) preference;
+
             /// M: [CT VOLTE] @{
             if (TelephonyUtilsEx.isCtVolteEnabled() && TelephonyUtilsEx.isCtSim(mPhone.getSubId())
-                    && !mEnhancedButton4glte.isChecked()) {
+                    && !ltePref.isChecked()) {
                 int type = TelephonyManager.getDefault().getNetworkType(mPhone.getSubId());
                 if (DBG) {
                     log("network type = " + type);
                 }
                 if (TelephonyManager.NETWORK_TYPE_LTE != type
-                        && !TelephonyUtilsEx.isRoaming(mPhone)) {
+                        && !TelephonyUtilsEx.isRoaming(mPhone)
+                        && (TelephonyUtilsEx.getMainPhoneId() == mPhone.getPhoneId()
+                        || TelephonyUtilsEx.isBothslotCt4gSim(mSubscriptionManager))) {
                     showVolteUnavailableDialog();
                     return false;
                 }
@@ -2243,7 +2257,7 @@
             ltePref.setChecked(!ltePref.isChecked());
             ImsManager.setEnhanced4gLteModeSetting(this, ltePref.isChecked(), mPhone.getPhoneId());
             return true;
-        }
+        }*/
         return false;
     }
     /// @}
@@ -2263,23 +2277,23 @@
                     @Override
                     public void onClick(DialogInterface dialog, int which) {
                         if (DBG) {
-                            log("dialog cancel mEnhanced4GLteSwitchPreference.setchecked  = "
-                                + !mEnhancedButton4glte.isChecked());
+                            /*log("dialog cancel mEnhanced4GLteSwitchPreference.setchecked  = "
+                                + !mEnhancedButton4glte.isChecked());*/
                         }
-                        mEnhancedButton4glte.setChecked(!mEnhancedButton4glte.isChecked());
+                        //mEnhancedButton4glte.setChecked(!mEnhancedButton4glte.isChecked());
 
                     }
                 }).setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
             @Override
             public void onClick(DialogInterface dialog, int which) {
-                mEnhancedButton4glte.setChecked(mEnhancedButton4glte.isChecked());
+                /*mEnhancedButton4glte.setChecked(mEnhancedButton4glte.isChecked());
                 if (DBG) {
                     log("dialog ok" + " ims set " + mEnhancedButton4glte.isChecked() + " mSlotId = "
                         + SubscriptionManager.getPhoneId(mPhone.getSubId()));
-                }
-                ImsManager.setEnhanced4gLteModeSetting(MobileNetworkSettings.this,
+                }*/
+                /*ImsManager.setEnhanced4gLteModeSetting(MobileNetworkSettings.this,
                         mEnhancedButton4glte.isChecked(),
-                        SubscriptionManager.getPhoneId(mPhone.getSubId()));
+                        SubscriptionManager.getPhoneId(mPhone.getSubId()));*/
             }
         }).create();
         dialog.setCanceledOnTouchOutside(false);
@@ -2288,10 +2302,10 @@
             public boolean onKey(DialogInterface dialog, int keyCode, KeyEvent event) {
                 if (KeyEvent.KEYCODE_BACK == keyCode) {
                     if (null != dialog) {
-                        log("onKey keycode = back"
+                        /*log("onKey keycode = back"
                                 + "dialog cancel mEnhanced4GLteSwitchPreference.setchecked  = "
                                 + !mEnhancedButton4glte.isChecked());
-                        mEnhancedButton4glte.setChecked(!mEnhancedButton4glte.isChecked());
+                        mEnhancedButton4glte.setChecked(!mEnhancedButton4glte.isChecked());*/
                         dialog.dismiss();
                         return true;
                     }
Index: vendor/branch/5058A_Claro/packages/services/Telephony/res/xml/network_setting.xml
===================================================================
--- vendor/branch/5058A_Claro/packages/services/Telephony/res/xml/network_setting.xml	(revision 0)
+++ vendor/branch/5058A_Claro/packages/services/Telephony/res/xml/network_setting.xml	(revision 5875)
@@ -0,0 +1,48 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2008 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android"
+        android:title="@string/mobile_networks">
+
+    <PreferenceScreen
+        android:key="cdma_lte_data_service_key"
+        android:title="@string/cdma_lte_data_service">
+    </PreferenceScreen>
+
+    <com.android.phone.RestrictedSwitchPreference
+        android:key="button_roaming_key"
+        android:title="@string/roaming"
+        android:persistent="false"
+        android:summaryOn="@string/roaming_enable"
+        android:summaryOff="@string/roaming_disable"/>
+
+    <ListPreference
+        android:key="preferred_network_mode_key"
+        android:title="@string/preferred_network_mode_title"
+        android:summary="@string/preferred_network_mode_summary"
+        android:entries="@array/preferred_network_mode_choices"
+        android:entryValues="@array/preferred_network_mode_values"
+        android:dialogTitle="@string/preferred_network_mode_dialogtitle" />
+
+    <ListPreference
+        android:key="enabled_networks_key"
+        android:title="@string/preferred_network_mode_title"
+        android:summary="@string/preferred_network_mode_summary"
+        android:entries="@array/enabled_networks_choices"
+        android:entryValues="@array/enabled_networks_values"
+        android:dialogTitle="@string/preferred_network_mode_dialogtitle" />
+
+
+</PreferenceScreen>
