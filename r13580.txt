Index: vendor/branch/5058Y_ALGB/packages/apps/Settings/ext/src/com/mediatek/settings/ext/DefaultApnSettingsExt.java
===================================================================
--- vendor/branch/5058Y_ALGB/packages/apps/Settings/ext/src/com/mediatek/settings/ext/DefaultApnSettingsExt.java	(revision 13579)
+++ vendor/branch/5058Y_ALGB/packages/apps/Settings/ext/src/com/mediatek/settings/ext/DefaultApnSettingsExt.java	(revision 13580)
@@ -35,7 +35,7 @@
      @Override
     public boolean isAllowEditPresetApn(String type, String apn, String numeric, int sourcetype) {
         Log.d(TAG, "isAllowEditPresetApn");
-        return true;
+        return false;
     }
 
     @Override
Index: vendor/branch/5058Y_ALGB/packages/apps/Settings/src/com/android/settings/ApnSettings.java
===================================================================
--- vendor/branch/5058Y_ALGB/packages/apps/Settings/src/com/android/settings/ApnSettings.java	(revision 13579)
+++ vendor/branch/5058Y_ALGB/packages/apps/Settings/src/com/android/settings/ApnSettings.java	(revision 13580)
@@ -423,10 +423,16 @@
                 pref.setSummary(apn);
                 pref.setPersistent(false);
                 pref.setOnPreferenceChangeListener(this);
-
-                /// M: for [Read Only APN]
+				
+				boolean isEditable = mApnExt.isAllowEditPresetApn(type, apn, mccmnc, sourcetype);
+                Log.d(TAG, "apn name = " + name + ", sourcetype = " + sourcetype + ", isEditable = " + isEditable);
+                
+				/// M: for [Read Only APN]
                 pref.setApnEditable(mApnExt.isAllowEditPresetApn(type, apn, mccmnc, sourcetype));
-                pref.setSubId(mSubscriptionInfo == null ? null : mSubscriptionInfo
+                if (sourcetype == 1) {
+                	pref.setApnEditable(true);
+                }
+				pref.setSubId(mSubscriptionInfo == null ? null : mSubscriptionInfo
                         .getSubscriptionId());
 
                 /// M: for ALPS02500557, do not select emergency APN
