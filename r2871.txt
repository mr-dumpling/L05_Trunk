Index: vendor/branch/5058A/vendor/mediatek/proprietary/packages/apps/Exchange/AndroidManifest.xml
===================================================================
--- vendor/branch/5058A/vendor/mediatek/proprietary/packages/apps/Exchange/AndroidManifest.xml	(revision 0)
+++ vendor/branch/5058A/vendor/mediatek/proprietary/packages/apps/Exchange/AndroidManifest.xml	(revision 2871)
@@ -0,0 +1,185 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2008 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<manifest
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.android.exchange"
+    android:versionCode="500065" >
+
+    <uses-permission
+        android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>
+    <uses-permission
+        android:name="android.permission.ACCESS_NETWORK_STATE"/>
+    <uses-permission
+        android:name="android.permission.INTERNET"/>
+    <uses-permission
+        android:name="android.permission.VIBRATE"/>
+    <uses-permission
+        android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
+    <uses-permission
+        android:name="android.permission.GET_ACCOUNTS" />
+    <uses-permission
+        android:name="android.permission.MANAGE_ACCOUNTS" />
+    <uses-permission
+        android:name="android.permission.AUTHENTICATE_ACCOUNTS" />
+    <uses-permission
+        android:name="android.permission.READ_SYNC_SETTINGS" />
+    <uses-permission
+        android:name="android.permission.WRITE_SYNC_SETTINGS" />
+
+    <uses-permission
+        android:name="android.permission.READ_CONTACTS"/>
+    <uses-permission
+        android:name="android.permission.WRITE_CONTACTS"/>
+    <uses-permission
+        android:name="android.permission.READ_CALENDAR"/>
+    <uses-permission
+        android:name="android.permission.WRITE_CALENDAR"/>
+    <uses-permission
+        android:name="android.permission.USE_CREDENTIALS"/>
+
+    <!-- Only required if a store implements push mail and needs to keep network open -->
+    <uses-permission
+        android:name="android.permission.WAKE_LOCK"/>
+    <uses-permission
+        android:name="android.permission.READ_PHONE_STATE"/>
+
+    <uses-permission
+        android:name="com.android.email.permission.READ_ATTACHMENT"/>
+    <uses-permission
+        android:name="com.android.email.permission.ACCESS_PROVIDER"/>
+
+    <uses-sdk android:targetSdkVersion="24" android:minSdkVersion="14" />
+
+     <!-- M: Request permission to write to secondary storage -->
+     <uses-permission
+        android:name = "android.permission.WRITE_MEDIA_STORAGE"/>
+    <!-- M: add permission for multi-user devices-->
+    <uses-permission android:name="android.permission.INTERACT_ACROSS_USERS" />
+    <uses-permission android:name="android.permission.INTERACT_ACROSS_USERS_FULL" />
+    <!-- additional uses -->
+
+    <application
+        android:icon="@mipmap/icon"
+        android:label="@string/app_name"
+        android:name="Exchange"
+        android:requiredAccountType="com.android.exchange"
+        android:theme="@android:style/Theme.Holo.Light"
+        >
+
+        <receiver
+            android:name="com.android.emailsync.EmailSyncAlarmReceiver"/>
+        <receiver
+            android:name="com.android.emailsync.MailboxAlarmReceiver"/>
+        <!-- M: For smart push alarm -->
+        <receiver
+            android:name="com.mediatek.exchange.smartpush.SmartPushAlarmReceiver" />
+
+        <service
+                android:name="com.android.exchange.service.EasService"
+                android:exported="true">
+            <intent-filter>
+                <action
+                        android:name="com.android.email.EXCHANGE_INTENT" />
+            </intent-filter>
+
+        </service>
+
+        <!--Required stanza to register the EAS EmailSyncAdapterService with SyncManager -->
+        <service
+            android:name="com.android.exchange.service.EmailSyncAdapterService"
+            android:exported="true">
+            <intent-filter>
+                <action
+                    android:name="android.content.SyncAdapter" />
+            </intent-filter>
+            <meta-data android:name="android.content.SyncAdapter"
+                       android:resource="@xml/syncadapter_email" />
+        </service>
+
+        <!--Required stanza to register the EAS ContactsSyncAdapterService with SyncManager -->
+        <service
+            android:name="com.android.exchange.service.ContactsSyncAdapterService"
+            android:exported="true">
+            <intent-filter>
+                <action
+                    android:name="android.content.SyncAdapter" />
+            </intent-filter>
+            <meta-data android:name="android.content.SyncAdapter"
+                       android:resource="@xml/syncadapter_contacts" />
+        </service>
+
+        <!--Required stanza to register the EAS CalendarSyncAdapterService with SyncManager -->
+        <service
+            android:name="com.android.exchange.service.CalendarSyncAdapterService"
+            android:exported="true">
+            <intent-filter>
+                <action
+                    android:name="android.content.SyncAdapter" />
+            </intent-filter>
+            <meta-data android:name="android.content.SyncAdapter"
+                       android:resource="@xml/syncadapter_calendar" />
+        </service>
+
+        <!-- M: Service for smart push calculation and sync interval adjustment-->
+        <service
+            android:name="com.mediatek.exchange.smartpush.SmartPushService"
+            android:enabled="true"
+            android:permission="com.android.email.permission.ACCESS_PROVIDER"
+            >
+            <intent-filter>
+                <action
+                    android:name="com.mediatek.email.SMARTPUSH_INTENT" />
+            </intent-filter>
+        </service>
+
+        <provider
+            android:name="com.android.exchange.provider.ExchangeDirectoryProvider"
+            android:authorities="com.android.exchange.directory.provider"
+            android:readPermission="android.permission.READ_CONTACTS"
+            android:multiprocess="false"
+            android:exported="true"
+            >
+          <meta-data
+              android:name="android.content.ContactDirectory"
+              android:value="true"/>
+        </provider>
+
+       <!-- M: Add configChanges attribute to control the activity not recreate when viewMode change -->
+        <activity
+            android:name=".EasCertificateRequestor"
+            android:configChanges="fontScale|orientation|screenSize|mnc">
+            <intent-filter>
+                <action android:name="com.android.email.EXCHANGE_REQUEST_CERT" />
+                <data android:scheme="eas" android:path="/certrequest" />
+                <category android:name="android.intent.category.DEFAULT" />
+            </intent-filter>
+        </activity>
+        <activity android:name=".SettingsRedirector">
+            <intent-filter>
+                <action android:name="android.intent.action.MANAGE_NETWORK_USAGE" />
+                <category android:name="android.intent.category.DEFAULT" />
+            </intent-filter>
+        </activity>
+
+        <receiver android:name="ExchangeBroadcastReceiver">
+            <intent-filter>
+                <action android:name="android.accounts.LOGIN_ACCOUNTS_CHANGED" />
+            </intent-filter>
+        </receiver>
+
+    </application>
+</manifest>
Index: vendor/branch/5058A/packages/apps/Email/AndroidManifest.xml
===================================================================
--- vendor/branch/5058A/packages/apps/Email/AndroidManifest.xml	(revision 0)
+++ vendor/branch/5058A/packages/apps/Email/AndroidManifest.xml	(revision 2871)
@@ -0,0 +1,875 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2012 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<!-- The format of the version code is vvMMDDc
+     vv is major version number
+     MM is the ordinal month number. This starts at 0 for each major release and
+         counts up for each month
+     DD is the day of the month
+     c is a code which increments per version, in case we have multiple releases
+          on the same date. This should start at zero. -->
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.android.email"
+    android:versionCode="7008110" >
+
+    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>
+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
+    <uses-permission android:name="android.permission.INTERNET"/>
+    <uses-permission android:name="android.permission.VIBRATE"/>
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
+    <uses-permission android:name="android.permission.GET_ACCOUNTS" />
+    <uses-permission android:name="android.permission.MANAGE_ACCOUNTS"/>
+    <uses-permission android:name="android.permission.AUTHENTICATE_ACCOUNTS" />
+    <uses-permission android:name="android.permission.READ_SYNC_SETTINGS" />
+    <uses-permission android:name="android.permission.WRITE_SYNC_SETTINGS"/>
+    <uses-permission android:name="android.permission.WRITE_CONTACTS"/>
+    <uses-permission android:name="android.permission.READ_CONTACTS"/>
+    <uses-permission android:name="android.permission.WRITE_CONTACTS"/>
+    <uses-permission android:name="android.permission.READ_CALENDAR"/>
+    <uses-permission android:name="android.permission.WRITE_CALENDAR"/>
+    <uses-permission android:name="android.permission.READ_PROFILE"/>
+    <uses-permission android:name="android.permission.NFC"/>
+    <uses-permission android:name="android.permission.WAKE_LOCK"/>
+    <uses-permission android:name="android.permission.READ_PHONE_STATE"/>
+    <!-- New Feature: unread message feature, add one permission to write setting.  -->
+    <uses-permission android:name="android.permission.WRITE_SETTINGS"/>
+    <uses-permission android:name="android.permission.DOWNLOAD_WITHOUT_NOTIFICATION" />
+    <!-- M: add permission for multi-user devices-->
+    <uses-permission android:name="android.permission.INTERACT_ACROSS_USERS" />
+    <uses-permission android:name="android.permission.INTERACT_ACROSS_USERS_FULL" />
+    <!-- M: add permission for Dex opt -->
+    <uses-permission android:name="android.permission.UPDATE_DEVICE_STATS"/>
+
+
+    <!-- This needs to be present when we are doing unbundled releases. -->
+    <uses-sdk android:targetSdkVersion="24" android:minSdkVersion="14" />
+
+    <!-- additional uses -->
+
+    <original-package android:name="com.android.email" />
+
+    <!-- Grant permission to other apps to view attachments -->
+    <!-- STOPSHIP: protectionLevel should not be dangerous -->
+    <permission
+        android:name="com.android.email.permission.READ_ATTACHMENT"
+        android:permissionGroup="android.permission-group.MESSAGES"
+        android:protectionLevel="dangerous"
+        android:label="@string/permission_read_attachment_label"
+        android:description="@string/permission_read_attachment_desc"/>
+    <uses-permission
+        android:name="com.android.email.permission.READ_ATTACHMENT"/>
+
+    <uses-permission
+        android:name="android.permission.USE_CREDENTIALS"/>
+
+    <!-- M: Request permission to write to secondary storage -->
+     <uses-permission
+        android:name = "android.permission.WRITE_MEDIA_STORAGE"/>
+    <!-- Grant permission to system apps to access provider (see provider below) -->
+    <permission
+        android:name="com.android.email.permission.ACCESS_PROVIDER"
+        android:protectionLevel="signature"
+        android:label="@string/permission_access_provider_label"
+        android:description="@string/permission_access_provider_desc"/>
+    <uses-permission
+        android:name="com.android.email.permission.ACCESS_PROVIDER"/>
+
+    <application
+        android:name=".EmailApplication"
+        android:icon="@mipmap/ic_launcher_mail"
+        android:label="@string/app_name"
+        android:requiredAccountType="com.android.exchange,com.android.email"
+        android:theme="@style/UnifiedEmailTheme"
+        android:allowBackup="false"
+        android:supportsRtl="true"
+        android:usesCleartextTraffic="true" >
+
+        <uses-library android:name="org.apache.http.legacy" android:required="false" />
+        <!-- M: Disable Compose Activity initially to avoid sharing from other App -->
+        <activity
+            android:name="com.android.email.activity.ComposeActivityEmail"
+            android:label="@string/app_name"
+            android:documentLaunchMode="intoExisting"
+            android:autoRemoveFromRecents="true"
+            android:enabled="false"
+            android:theme="@style/ComposeTheme">
+            <intent-filter>
+                <action
+                    android:name="android.intent.action.VIEW" />
+                <action
+                    android:name="android.intent.action.SENDTO" />
+                <data
+                    android:scheme="mailto" />
+                <category
+                    android:name="android.intent.category.DEFAULT" />
+                <category
+                    android:name="android.intent.category.BROWSABLE" />
+            </intent-filter>
+            <intent-filter
+                android:label="@string/app_name">
+                <action
+                    android:name="android.intent.action.SEND" />
+                <data
+                    android:mimeType="*/*" />
+                <category
+                    android:name="android.intent.category.DEFAULT" />
+            </intent-filter>
+            <intent-filter
+                android:label="@string/app_name">
+                <action
+                    android:name="android.intent.action.SEND_MULTIPLE" />
+                <data
+                    android:mimeType="*/*" />
+                <category
+                    android:name="android.intent.category.DEFAULT" />
+            </intent-filter>
+            <intent-filter>
+                <action
+                    android:name="com.android.email.intent.action.REPLY" />
+            </intent-filter>
+            <intent-filter>
+                <action android:name="android.intent.action.SEND" />
+                <category
+                    android:name="android.intent.category.DEFAULT" />
+                <data
+                    android:scheme="content"
+                    android:host="ui.email2.android.com"
+                    android:pathPrefix="/compose"
+                    />
+            </intent-filter>
+            <intent-filter>
+                <action android:name="android.nfc.action.NDEF_DISCOVERED" />
+                <category android:name="android.intent.category.DEFAULT" />
+                <data android:scheme="mailto" />
+            </intent-filter>
+
+            <intent-filter>
+                <action android:name="com.android.mail.intent.action.LAUNCH_COMPOSE" />
+                <category android:name="android.intent.category.DEFAULT" />
+            </intent-filter>
+
+            <intent-filter>
+                <action android:name="com.android.mail.intent.action.LAUNCH_COMPOSE" />
+                <category android:name="android.intent.category.DEFAULT" />
+                <data android:scheme="content" />
+            </intent-filter>
+        </activity>
+
+        <activity-alias android:name="com.android.mail.compose.ComposeActivity"
+            android:targetActivity="com.android.email.activity.ComposeActivityEmail"/>
+
+        <activity
+            android:name=".activity.setup.OAuthAuthenticationActivity"
+            android:label="@string/oauth_authentication_title">
+        </activity>
+
+        <activity
+            android:name=".activity.setup.AccountCredentials"
+            android:label="@string/sign_in_title"
+            android:exported="false"
+            android:excludeFromRecents="true"
+            android:theme="@style/AccountSetupDialogActivityTheme">
+        </activity>
+
+        <activity
+            android:name=".activity.EventViewer"
+            android:label="@string/app_name"
+            >
+            <intent-filter>
+                <action android:name="android.intent.action.VIEW" />
+                <category
+                    android:name="android.intent.category.DEFAULT" />
+                <!-- M: By set mimeType, using only Email app to handle invitation view request -->
+                <data
+                    android:scheme="content"
+                    android:host="ui.email2.android.com"
+                    android:pathPrefix="/event"
+                    android:mimeType="email/invitation"
+                    />
+            </intent-filter>
+        </activity>
+
+        <activity android:name="com.android.mail.ui.FolderSelectionActivity"
+            android:label="@string/activity_folder_selection"
+            android:theme="@style/ShortcutWidgetTheme" />
+
+        <activity android:name="com.android.email2.ui.MailboxSelectionActivityEmail"
+            android:theme="@style/ShortcutWidgetTheme"
+            android:label="@string/app_name" >
+            <intent-filter>
+                <action android:name="android.appwidget.action.APPWIDGET_CONFIGURE" />
+            </intent-filter>
+        </activity>
+
+        <activity android:name="com.android.mail.ui.ShortcutNameActivity"
+            android:label="@string/shortcut_name_title"
+            android:theme="@style/ShortcutWidgetTheme">
+        </activity>
+
+        <activity android:name="com.android.mail.ui.MailboxSelectionActivity"
+            android:theme="@style/ShortcutWidgetTheme"
+            android:label="@string/app_name" >
+            <intent-filter>
+                <action android:name="android.appwidget.action.APPWIDGET_CONFIGURE" />
+            </intent-filter>
+        </activity>
+
+        <activity android:name="com.android.email2.ui.CreateShortcutActivityEmail"
+            android:theme="@style/ShortcutWidgetTheme"
+            android:label="@string/folder_shortcut_widget_label">
+
+            <intent-filter>
+                <action android:name="android.intent.action.CREATE_SHORTCUT" />
+                <category android:name="android.intent.category.DEFAULT" />
+            </intent-filter>
+
+        </activity>
+
+        <activity
+            android:label="@string/app_name"
+            android:name="com.android.email2.ui.MailActivityEmail"
+            android:theme="@style/MailActivityTheme"
+            android:configChanges="mcc|mnc"
+            android:windowSoftInputMode="stateAlwaysHidden">
+            android:hardwareAccelerated="true">
+            <intent-filter>
+                <action android:name="android.intent.action.VIEW" />
+                <category android:name="android.intent.category.DEFAULT" />
+                <data android:scheme="content"/>
+                <data android:mimeType="@string/application_mime_type" />
+            </intent-filter>
+            <intent-filter>
+                <action android:name="android.intent.action.SEARCH" />
+                <category android:name="android.intent.category.DEFAULT" />
+            </intent-filter>
+        </activity>
+
+        <activity-alias android:name="com.android.email.activity.Welcome"
+            android:targetActivity="com.android.email2.ui.MailActivityEmail"
+            android:label="@string/app_name" >
+            <intent-filter >
+                <action android:name="android.intent.action.MAIN" />
+                <category android:name="android.intent.category.DEFAULT" />
+                <category android:name="android.intent.category.LAUNCHER" />
+                <category android:name="android.intent.category.APP_EMAIL" />
+            </intent-filter>
+            <intent-filter>
+                <action android:name="android.intent.action.VIEW" />
+                <action android:name="android.intent.action.MAIN" />
+                <category android:name="android.intent.category.DEFAULT" />
+                <category android:name="android.intent.category.LAUNCHER" />
+                <data
+                    android:scheme="content"
+                    android:host="ui.email.android.com"
+                    android:path="/view/mailbox"
+                    />
+            </intent-filter>
+            <!-- M: Global email search support -->
+            <intent-filter>
+                <action android:name="android.intent.action.SEARCH" />
+                <category android:name="android.intent.category.DEFAULT" />
+            </intent-filter>
+            <meta-data android:name="android.app.searchable"
+                android:resource="@xml/mtk_searchable"/>
+        </activity-alias>
+
+        <!-- Must be exported in order for the AccountManager to launch it -->
+        <!-- Also available for continuous test systems to force account creation -->
+
+        <!-- M: Support Provider List function, first activity in set up flow. -->
+        <activity
+            android:name="com.mediatek.email.extension.AccountSetupChooseMailProvider"
+            android:label="@string/extension_choose_provider_title">
+        </activity>
+        <activity
+            android:name=".activity.setup.AccountSetupFinal"
+            android:label="@string/account_setup_basics_title"
+            android:exported="true"
+            >
+            <intent-filter>
+                <action android:name="com.android.email.FORCE_CREATE_ACCOUNT" />
+                <action android:name="com.android.email.CREATE_NEW_ACCOUNT" />
+                <category android:name="android.intent.category.DEFAULT" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name=".activity.setup.EmailPreferenceActivity"
+            android:label="@string/activity_preferences"
+            android:exported="true" > <!-- M:change exported to true to avoid permission JE -->
+            <intent-filter>
+                <action android:name="android.intent.action.EDIT" />
+                <action android:name="android.intent.action.VIEW" />
+                <category android:name="android.intent.category.DEFAULT" />
+                <data
+                        android:scheme="content"
+                        android:host="ui.email.android.com"
+                        android:pathPrefix="/settings"
+                        />
+            </intent-filter>
+        </activity>
+        <activity
+                android:name="com.android.mail.ui.settings.PublicPreferenceActivity"
+                android:label="@string/activity_preferences"
+                android:exported="true"
+                android:theme="@android:style/Theme.NoDisplay" >
+            <!-- Must be exported in order for the AccountManager to launch it -->
+            <intent-filter>
+                <action android:name="com.android.email.activity.setup.ACCOUNT_MANAGER_ENTRY" />
+                <category android:name="android.intent.category.DEFAULT" />
+            </intent-filter>
+            <intent-filter>
+                <action android:name="android.intent.action.MANAGE_NETWORK_USAGE" />
+                <category android:name="android.intent.category.DEFAULT" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name=".activity.setup.AccountServerSettingsActivity"
+            android:label="@string/mailbox_settings_activity_title"
+            android:exported="false"
+			android:screenOrientation="portrait"
+            android:excludeFromRecents="true"
+            android:windowSoftInputMode="adjustResize"
+            android:theme="@style/AccountSetupDialogActivityTheme" />
+        <!-- a Headless Activity to load the account from the account id before navigating to the
+        Incoming Account Settings fragment -->
+        <activity
+            android:name=".activity.setup.HeadlessAccountSettingsLoader"
+            android:theme="@android:style/Theme.NoDisplay"
+            >
+            <intent-filter>
+                <action android:name="android.intent.action.VIEW" />
+                <category android:name="android.intent.category.DEFAULT" />
+                <data android:host="com.android.email.ACCOUNT_SETTINGS" />
+                <data android:scheme="auth"/>
+            </intent-filter>
+        </activity>
+        <activity
+            android:name=".provider.FolderPickerActivity"
+            android:label="@string/app_name"
+            >
+            <intent-filter>
+                <action android:name="android.intent.action.EDIT" />
+                <category android:name="android.intent.category.DEFAULT" />
+                <data
+                    android:scheme="content"
+                    android:host="ui.email.android.com"
+                    android:pathPrefix="/setup"
+                    />
+            </intent-filter>
+        </activity>
+        <!-- M: Intercept the system config changes such as screen rotate,
+         font size change to avoid re-create setting activity -->
+        <activity
+            android:name=".activity.setup.AccountSecurity"
+            android:label="@string/account_security_title"
+            android:configChanges="keyboard|keyboardHidden|fontScale|orientation|screenSize"
+            >
+        </activity>
+
+        <activity
+            android:name=".activity.setup.MailboxSettings"
+            android:label="@string/mailbox_settings_activity_title"
+            android:exported="false" />
+
+        <activity
+            android:name="com.android.mail.photo.MailPhotoViewActivity"
+            android:label="@string/app_name"
+            android:theme="@style/MailPhotoViewTheme" >
+        </activity>
+
+        <activity
+                android:name="com.android.mail.browse.EmlViewerActivity"
+                android:label="@string/app_name"
+                android:theme="@style/UnifiedEmailTheme.Appcompat" >
+            <intent-filter>
+                <action android:name="android.intent.action.VIEW" />
+                <category android:name="android.intent.category.DEFAULT" />
+                <data android:mimeType="message/rfc822" />
+                <data android:mimeType="application/eml" />
+            </intent-filter>
+        </activity>
+
+        <activity
+            android:name="com.android.mail.ui.HelpActivity"
+            android:label="@string/help_and_info">
+        </activity>
+
+        <activity
+            android:name="com.android.mail.ui.LicensesActivity"
+            android:label="@string/open_source_licenses">
+        </activity>
+
+
+        <!-- M: VIP members list activity -->
+        <activity
+            android:name="com.mediatek.mail.vip.activity.VipListActivity">
+            <intent-filter>
+                <action android:name="android.intent.action.EMAIL_VIP_ACTIVITY" />
+                <category android:name="android.intent.category.DEFAULT" />
+            </intent-filter>
+        </activity>
+
+        <!-- M: Use for global email search -->
+        <provider android:name="com.mediatek.email.provider.EmailSuggestionsProvider"
+            android:authorities="com.mediatek.email.provider.EmailSuggestionsProvider"
+            android:exported="true"/>
+
+        <!-- additional activities -->
+        <!-- M: Add for email address history.-->
+        <provider
+            android:name="com.mediatek.email.provider.history.EmailAddressHisProviders"
+            android:authorities="com.mediatek.email.provider.history"
+            android:exported="false"
+            android:label="@string/app_name" >
+            <meta-data
+                android:name="android.content.ContactDirectory"
+                android:value="true" />
+        </provider>
+        <!-- end -->
+
+        <provider
+            android:authorities="com.android.email2.conversation.provider"
+            android:label="@string/conversation_content_provider"
+            android:exported="true"
+            android:name="com.android.mail.browse.EmailConversationProvider" >
+            <grant-uri-permission android:pathPattern=".*" />
+        </provider>
+
+        <provider
+            android:authorities="com.android.email.accountcache"
+            android:label="@string/account_cache_provider"
+            android:exported="false"
+            android:name="com.android.mail.providers.EmailAccountCacheProvider" >
+            <grant-uri-permission android:pathPattern=".*" />
+        </provider>
+
+        <!-- M: modified android:exported to "true" and added read permission,
+         made this provider support sharing attachment -->
+        <provider
+                android:authorities="com.android.email.provider.eml.attachment"
+                android:exported="true"
+                android:readPermission="com.android.email.permission.READ_ATTACHMENT"
+                android:name="com.android.mail.providers.EmlAttachmentProvider" >
+            <grant-uri-permission android:pathPattern=".*" />
+        </provider>
+
+        <service android:name="com.android.mail.compose.EmptyService"/>
+        <!-- Widget -->
+        <receiver android:name=".provider.WidgetProvider" android:label="@string/app_name">
+            <intent-filter>
+                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
+                <!-- M: when date/time changed, need update widget -->
+                <action android:name="android.intent.action.DATE_CHANGED" />
+                <action android:name="android.intent.action.TIME_SET" />
+            </intent-filter>
+            <intent-filter>
+                <action android:name="com.android.mail.ACTION_NOTIFY_DATASET_CHANGED" />
+                <data android:mimeType="@string/application_mime_type" />
+            </intent-filter>
+            <intent-filter>
+                <action android:name="com.android.mail.ACTION_UPDATE_WIDGET" />
+                <data android:mimeType="@string/application_mime_type" />
+            </intent-filter>
+            <intent-filter>
+                <action android:name="com.android.mail.ACTION_VALIDATE_ALL_WIDGETS" />
+                <data android:mimeType="@string/application_mime_type" />
+            </intent-filter>
+            <meta-data android:name="android.appwidget.provider"
+                       android:resource="@xml/widget_info" />
+        </receiver>
+        <service android:name="com.android.mail.widget.WidgetService"
+                 android:permission="android.permission.BIND_REMOTEVIEWS"
+                 android:exported="false" />
+
+        <!-- M: for Out of office feature -->
+        <activity
+            android:name="com.mediatek.email.outofoffice.OofSettingsActivity">
+            <intent-filter>
+                <action android:name="android.intent.action.OOF_SETTING_ACTION" />
+                <category android:name="android.intent.category.DEFAULT" />
+            </intent-filter>
+        </activity>
+
+        <!-- From Email application -->
+
+        <receiver
+            android:name=".service.AttachmentService$AttachmentWatchdog"
+            android:enabled="true"/>
+
+        <!-- Handles app upgrade. This disables itself after running once. -->
+        <receiver
+            android:name=".service.EmailUpgradeBroadcastReceiver"
+            android:enabled="true">
+            <intent-filter>
+                <action android:name="android.intent.action.BOOT_COMPLETED" />
+                <action android:name="android.intent.action.MY_PACKAGE_REPLACED" />
+            </intent-filter>
+        </receiver>
+
+        <receiver
+            android:name=".service.EmailBroadcastReceiver"
+            android:enabled="true">
+            <intent-filter>
+                <action android:name="android.intent.action.BOOT_COMPLETED" />
+                <action android:name="android.intent.action.DEVICE_STORAGE_LOW" />
+                <action android:name="android.intent.action.DEVICE_STORAGE_OK" />
+                <action android:name="android.intent.action.LOCALE_CHANGED"/>
+                <action android:name="android.accounts.LOGIN_ACCOUNTS_CHANGED" />
+                <!-- M:To handle settings clear package data. clear unread number in launcher -->
+                <action
+                    android:name="com.mediatek.intent.action.SETTINGS_PACKAGE_DATA_CLEARED" />
+            </intent-filter>
+            <!-- To handle new message notifications -->
+            <intent-filter>
+                <action android:name="com.android.mail.action.update_notification"
+                        android:priority="-10" />
+                <data android:mimeType="@string/application_mime_type" />
+            </intent-filter>
+            <!-- To handle secret code to activate the debug screen. -->
+            <intent-filter>
+                <action
+                    android:name="android.provider.Telephony.SECRET_CODE" />
+                <!-- "36245" = "email" -->
+                <data
+                    android:scheme="android_secret_code"
+                    android:host="36245" />
+            </intent-filter>
+        </receiver>
+
+        <service android:name=".service.EmailBroadcastProcessorService" >
+            <intent-filter>
+                <action android:name="com.android.email.action.SWITCH_TESTCASE" />
+            </intent-filter>
+        </service>
+
+        <!-- Support for DeviceAdmin / DevicePolicyManager.  See SecurityPolicy class for impl. -->
+        <receiver
+            android:name=".SecurityPolicy$PolicyAdmin"
+            android:label="@string/device_admin_label"
+            android:description="@string/device_admin_description"
+            android:permission="android.permission.BIND_DEVICE_ADMIN" >
+            <meta-data
+                android:name="android.app.device_admin"
+                android:resource="@xml/device_admin" />
+            <intent-filter>
+                <action
+                    android:name="android.app.action.DEVICE_ADMIN_ENABLED" />
+            </intent-filter>
+        </receiver>
+
+        <service
+            android:name=".service.AttachmentService"
+            android:enabled="false"
+            >
+        </service>
+
+        <!--Required stanza to register the PopImapAuthenticatorService with AccountManager -->
+        <service
+            android:name=".service.Pop3AuthenticatorService"
+            android:exported="true"
+            android:enabled="true"
+            >
+            <intent-filter>
+                <action
+                    android:name="android.accounts.AccountAuthenticator" />
+            </intent-filter>
+            <meta-data
+                android:name="android.accounts.AccountAuthenticator"
+                android:resource="@xml/authenticator_pop3"
+                />
+        </service>
+        <!--Required stanza to register the PopImapAuthenticatorService with AccountManager -->
+        <service
+            android:name=".service.ImapAuthenticatorService"
+            android:exported="true"
+            android:enabled="false"
+            >
+            <intent-filter>
+                <action
+                    android:name="android.accounts.AccountAuthenticator" />
+            </intent-filter>
+            <meta-data
+                android:name="android.accounts.AccountAuthenticator"
+                android:resource="@xml/authenticator_imap"
+                />
+        </service>
+
+        <!--Required stanza to register the PopImapSyncAdapterService with SyncManager -->
+        <service
+            android:name="com.android.email.service.Pop3SyncAdapterService"
+            android:exported="true">
+            <intent-filter>
+                <action
+                    android:name="android.content.SyncAdapter" />
+            </intent-filter>
+            <meta-data android:name="android.content.SyncAdapter"
+                       android:resource="@xml/syncadapter_pop3" />
+        </service>
+
+        <service
+            android:name="com.android.email.service.LegacyImapSyncAdapterService"
+            android:exported="true">
+            <intent-filter>
+                <action
+                    android:name="android.content.SyncAdapter" />
+            </intent-filter>
+            <meta-data android:name="android.content.SyncAdapter"
+                       android:resource="@xml/syncadapter_legacy_imap" />
+        </service>
+
+        <!-- Require provider permission to use our Policy and Account services -->
+        <service
+            android:name=".service.PolicyService"
+            android:enabled="true"
+            android:permission="com.android.email.permission.ACCESS_PROVIDER"
+            >
+            <intent-filter>
+                <action
+                    android:name="com.android.email.POLICY_INTENT" />
+            </intent-filter>
+        </service>
+
+        <service
+            android:name=".service.AccountService"
+            android:enabled="true"
+            android:permission="com.android.email.permission.ACCESS_PROVIDER"
+            >
+            <intent-filter>
+                <action
+                    android:name="com.android.email.ACCOUNT_INTENT" />
+            </intent-filter>
+        </service>
+
+        <service
+            android:name=".service.ImapService"
+            android:enabled="true"
+            android:permission="com.android.email.permission.ACCESS_PROVIDER"
+            >
+            <intent-filter>
+                <action
+                    android:name="com.android.email.IMAP_INTENT" />
+            </intent-filter>
+        </service>
+
+        <service
+            android:name=".service.Pop3Service"
+            android:enabled="true"
+            android:permission="com.android.email.permission.ACCESS_PROVIDER"
+            >
+            <intent-filter>
+                <action
+                    android:name="com.android.email.POP3_INTENT" />
+            </intent-filter>
+        </service>
+
+        <!--Required stanza to register the EasAuthenticatorService with AccountManager -->
+        <service
+            android:name=".service.EasAuthenticatorService"
+            android:exported="true"
+            android:enabled="true"
+            >
+            <intent-filter>
+                <action
+                    android:name="android.accounts.AccountAuthenticator" />
+            </intent-filter>
+            <meta-data
+                android:name="android.accounts.AccountAuthenticator"
+                android:resource="@xml/authenticator_eas"
+                />
+        </service>
+        <!--Required stanza to register the EasTestAuthenticatorService with AccountManager -->
+        <service
+            android:name=".service.EasTestAuthenticatorService"
+            android:exported="true"
+            android:enabled="false"
+            >
+            <intent-filter>
+                <action
+                    android:name="android.accounts.AccountAuthenticator" />
+            </intent-filter>
+            <meta-data
+                android:name="android.accounts.AccountAuthenticator"
+                android:resource="@xml/eastest_authenticator"
+                />
+        </service>
+        <!--
+            EasAuthenticatorService with the alternative label.  Disabled by default,
+            and OneTimeInitializer enables it if the vendor policy tells so.
+        -->
+        <service
+            android:name=".service.EasAuthenticatorServiceAlternate"
+            android:exported="true"
+            android:enabled="false"
+            >
+            <intent-filter>
+                <action
+                    android:name="android.accounts.AccountAuthenticator" />
+            </intent-filter>
+            <meta-data
+                android:name="android.accounts.AccountAuthenticator"
+                android:resource="@xml/authenticator_alternate"
+                />
+        </service>
+
+        <service
+            android:name=".service.LegacyImapAuthenticatorService"
+            android:exported="false"
+            android:enabled="true"
+            >
+            <intent-filter>
+                <action
+                    android:name="android.accounts.AccountAuthenticator" />
+            </intent-filter>
+            <meta-data
+                android:name="android.accounts.AccountAuthenticator"
+                android:resource="@xml/authenticator_legacy_imap"
+                />
+        </service>
+
+        <provider
+            android:name=".provider.AttachmentProvider"
+            android:authorities="com.android.email.attachmentprovider"
+            android:grantUriPermissions="true"
+            android:exported="true"
+            android:readPermission="com.android.email.permission.READ_ATTACHMENT"
+            />
+
+        <!-- This provider MUST be protected by strict permissions, as granting access to
+             it exposes user passwords and other confidential information. -->
+        <provider
+            android:name=".provider.EmailProvider"
+            android:authorities="com.android.email.provider;com.android.email.notifier"
+            android:exported="true"
+            android:grantUriPermissions="true"
+            android:permission="com.android.email.permission.ACCESS_PROVIDER"
+            android:label="@string/app_name"
+            />
+
+        <!-- Legacy authenticators, etc. can be added below. OEMs may remove these -->
+        <!-- M: Disable to avoid overriding by Exchange label in AccountManager List -->
+        <service
+            android:name=".service.LegacyEmailAuthenticatorService"
+            android:exported="false"
+            android:enabled="false"
+            >
+            <intent-filter>
+                <action
+                    android:name="android.accounts.AccountAuthenticator" />
+            </intent-filter>
+            <meta-data
+                android:name="android.accounts.AccountAuthenticator"
+                android:resource="@xml/authenticator_legacy_email"
+                />
+        </service>
+
+        <service
+            android:name=".service.LegacyEasAuthenticatorService"
+            android:exported="false"
+            android:enabled="true"
+            >
+            <intent-filter>
+                <action
+                    android:name="android.accounts.AccountAuthenticator" />
+            </intent-filter>
+            <meta-data
+                android:name="android.accounts.AccountAuthenticator"
+                android:resource="@xml/authenticator_legacy_eas"
+                />
+        </service>
+
+        <service android:name="com.android.email.EmailIntentService"
+                 android:exported="false">
+            <intent-filter>
+                <action android:name="com.android.mail.action.RESEND_NOTIFICATIONS" />
+                <action android:name="com.android.mail.action.RESEND_NOTIFICATIONS_WEAR" />
+                <action android:name="com.android.mail.action.SEND_SET_NEW_EMAIL_INDICATOR" />
+            </intent-filter>
+            <intent-filter>
+                <action android:name="com.android.mail.action.CLEAR_NEW_MAIL_NOTIFICATIONS" />
+                <data android:scheme="content" />
+            </intent-filter>
+            <intent-filter>
+                <action android:name="com.android.mail.action.update_notification"
+                        android:priority="-10"/>
+                <data android:mimeType="@string/application_mime_type" />
+            </intent-filter>
+        </service>
+
+        <service android:name="com.android.mail.NotificationActionIntentService"
+                  android:exported="false">
+            <intent-filter>
+                <action android:name="com.android.mail.action.notification.MARK_READ" />
+                <action android:name="com.android.mail.action.notification.ARCHIVE" />
+                <action android:name="com.android.mail.action.notification.DELETE" />
+                <action android:name="com.android.mail.action.notification.UNDO" />
+                <action android:name="com.android.mail.action.notification.DESTRUCT" />
+                <action android:name="com.android.mail.action.notification.UNDO_TIMEOUT" />
+                <action android:name="com.android.mail.action.notification.REPLY" />
+                <action android:name="com.android.mail.action.notification.REPLY_ALL" />
+                <action android:name="com.android.mail.action.notification.FORWARD" />
+                <data android:scheme="content" />
+            </intent-filter>
+        </service>
+        <service android:name="com.android.mail.MailLogService">
+        </service>
+        <!-- M: Email attachment auto clear service -->
+        <service android:name="com.mediatek.email.service.AttachmentAutoClearService" />
+        <service android:name="com.android.mail.browse.EmlTempFileDeletionService" />
+        <!-- M: Email external support,specially omacp service. -->
+        <receiver android:name="com.mediatek.email.omacp.EmailExternalReceiver" android:enabled="true">
+            <intent-filter>
+                <action android:name="com.mediatek.omacp.settings" />
+                <data android:mimeType="application/com.mediatek.omacp-25" />
+            </intent-filter>
+            <intent-filter>
+                <action android:name="com.mediatek.omacp.capability" />
+            </intent-filter>
+        </receiver>
+        <service android:name="com.mediatek.email.omacp.EmailExternalOmacpService" />
+        <!-- end -->
+        <!-- M: Handles Email messages backup -->
+        <receiver
+            android:name="com.mediatek.email.backuprestore.EmailBackupRestoreReceiver"
+            android:enabled="true">
+            <intent-filter>
+                <action android:name="com.mediatek.apst.target.START_EMAIL_BACKUP" />
+                <action android:name="com.mediatek.apst.target.START_EMAIL_RESTORE" />
+            </intent-filter>
+        </receiver>
+        <service android:name="com.mediatek.email.backuprestore.EmailBackupRestoreService" />
+        <!-- end -->
+        <!-- M: Handle vendor email app install/uninstall and locale change -->
+        <receiver
+            android:name="com.mediatek.email.extension.VendorPackageBroadcastReceiver"
+            android:enabled="true">
+            <intent-filter>
+                <action android:name="android.intent.action.PACKAGE_ADDED" />
+                <action android:name="android.intent.action.PACKAGE_REPLACED" />
+                <action android:name="android.intent.action.PACKAGE_REMOVED" />
+
+                <data android:scheme="package"
+                    android:ssp="com.android.email.policy" />
+            </intent-filter>
+            <intent-filter>
+                <action android:name="android.intent.action.LOCALE_CHANGED" />
+            </intent-filter>
+        </receiver>
+        <!-- end -->
+    </application>
+
+    <!-- Legacy permissions, etc. can go here -->
+
+</manifest>
Index: vendor/branch/5058A/packages/apps/Email/src/com/android/email2/ui/MailActivityEmail.java
===================================================================
--- vendor/branch/5058A/packages/apps/Email/src/com/android/email2/ui/MailActivityEmail.java	(revision 0)
+++ vendor/branch/5058A/packages/apps/Email/src/com/android/email2/ui/MailActivityEmail.java	(revision 2871)
@@ -0,0 +1,281 @@
+/*
+* Copyright (C) 2014 MediaTek Inc.
+* Modification based on code covered by the mentioned copyright
+* and/or permission notice(s).
+*/
+/*
+ * Copyright (C) 2008 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.email2.ui;
+
+import android.content.ComponentName;
+import android.content.ContentResolver;
+import android.content.Context;
+import android.content.Intent;
+import android.content.UriMatcher;
+import android.content.pm.PackageManager;
+import android.database.Cursor;
+import android.net.Uri;
+import android.os.Bundle;
+
+import com.android.email.Preferences;
+import com.android.email.provider.EmailProvider;
+import com.android.email.service.AttachmentService;
+import com.android.email.service.EmailServiceUtils;
+import com.android.emailcommon.Logging;
+import com.android.emailcommon.TempDirectory;
+import com.android.emailcommon.provider.EmailContent.Message;
+import com.android.emailcommon.provider.Mailbox;
+import com.android.emailcommon.utility.DataCollectUtils;
+import com.android.emailcommon.utility.IntentUtilities;
+import com.android.mail.providers.Conversation;
+import com.android.mail.providers.Folder;
+import com.android.mail.providers.UIProvider;
+import com.android.mail.ui.ActivityController;
+import com.android.mail.ui.MailActivity;
+import com.android.mail.ui.ViewMode;
+import com.android.mail.utils.LogTag;
+import com.android.mail.utils.LogUtils;
+import com.android.mail.utils.PDebug;
+import com.android.mail.utils.Utils;
+
+import android.Manifest;
+import com.android.email.R;
+import android.widget.Toast;
+import java.util.ArrayList;
+import android.app.Activity;
+import android.support.v4.app.ActivityCompat;
+import android.support.v4.content.ContextCompat;
+
+public class MailActivityEmail extends com.android.mail.ui.MailActivity {
+
+    public static final String LOG_TAG = LogTag.getLogTag();
+
+    private static final int MATCH_LEGACY_SHORTCUT_INTENT = 1;
+    /**
+     * A matcher for data URI's that specify conversation list info.
+     */
+    private static final UriMatcher sUrlMatcher = new UriMatcher(UriMatcher.NO_MATCH);
+    static {
+        sUrlMatcher.addURI(
+                EmailProvider.LEGACY_AUTHORITY, "view/mailbox", MATCH_LEGACY_SHORTCUT_INTENT);
+    }
+	
+	    public boolean checkAndRequestForEmail(Activity activity) {
+        // get permissions needed in current scenario
+        ArrayList<String> permissionsNeeded = new ArrayList<String>();
+        permissionsNeeded.add(Manifest.permission.READ_CONTACTS);
+		permissionsNeeded.add(Manifest.permission.READ_PHONE_STATE);
+		permissionsNeeded.add(Manifest.permission.READ_CALENDAR);
+		permissionsNeeded.add(Manifest.permission.WRITE_EXTERNAL_STORAGE);
+        // check status of permissions, get which permissions need to request
+        ArrayList<String> permissionsNeedRequest = new ArrayList<String>();
+        for (String permission : permissionsNeeded) {
+            if (ContextCompat.checkSelfPermission(activity, permission)
+                    == PackageManager.PERMISSION_GRANTED) {
+                continue;
+            }
+            permissionsNeedRequest.add(permission);
+        }
+        // request permissions
+        if (permissionsNeedRequest.size() == 0) {
+            log("<checkAndRequestForEmail> all permissions are granted");
+            return true;
+        } else {
+            log("<checkAndRequestForEmail> not all permissions are granted, reuqest");
+            String[] permissions = new String[permissionsNeedRequest.size()];
+            permissions = permissionsNeedRequest.toArray(permissions);
+            ActivityCompat.requestPermissions(activity, permissions, 0);
+            return false;
+        }
+    }
+
+
+    /**
+     * M: Create our own EmailActivity's controller
+     */
+    @Override
+    protected ActivityController createActivityController(MailActivity activity, ViewMode viewMode,
+            boolean tabletUi) {
+        return ControllerFactoryEmail.forActivity(activity, viewMode, tabletUi);
+    }
+
+    @Override
+    public void onCreate(Bundle bundle) {
+        PDebug.Start("MailActivityEmail.onCreate");		
+		super.onCreate(bundle);
+        
+        boolean hasReadContactsPermission = checkAndRequestForEmail(this);
+    	  if (!hasReadContactsPermission) {
+    	  	Toast.makeText(this, "You have disabled a required permission", Toast.LENGTH_SHORT).show();
+            finish();
+		 }
+        final Intent intent = getIntent();
+        final Uri data = intent != null ? intent.getData() : null;
+        if (data != null) {
+            final int match = sUrlMatcher.match(data);
+            switch (match) {
+                case MATCH_LEGACY_SHORTCUT_INTENT: {
+                    final long mailboxId = IntentUtilities.getMailboxIdFromIntent(intent);
+                    final Mailbox mailbox = Mailbox.restoreMailboxWithId(this, mailboxId);
+                    if (mailbox == null) {
+                        LogUtils.e(LOG_TAG, "unable to restore mailbox");
+                        break;
+                    }
+
+                    /// M: Open specified message if message id is included. @{
+                    final long messageId = IntentUtilities.getMessageIdFromIntent(intent);
+                    LogUtils.d(LOG_TAG, "Get messageId: %s from the intent", messageId);
+                    /// @}
+
+                    final Intent viewIntent = getViewIntent(mailbox.mAccountKey, mailboxId, messageId);
+                    if (viewIntent != null) {
+                        setIntent(viewIntent);
+                    }
+                    break;
+                }
+            }
+        }
+		
+        TempDirectory.setTempDirectory(this);
+
+        // Make sure all required services are running when the app is started (can prevent
+        // issues after an adb sync/install)
+        EmailProvider.setServicesEnabledAsync(this);
+        PDebug.End("MailActivityEmail.onCreate");
+    }
+
+    /**
+     * Internal, utility method for logging.
+     * The calls to log() must be guarded with "if (Email.LOGD)" for performance reasons.
+     */
+    public static void log(String message) {
+        LogUtils.d(Logging.LOG_TAG, message);
+    }
+
+    private Intent getViewIntent(long accountId, long mailboxId, long messageId) {
+        final ContentResolver contentResolver = getContentResolver();
+
+        final Cursor accountCursor = contentResolver.query(
+                EmailProvider.uiUri("uiaccount", accountId),
+                UIProvider.ACCOUNTS_PROJECTION_NO_CAPABILITIES,
+                null, null, null);
+
+        if (accountCursor == null) {
+            LogUtils.e(LOG_TAG, "Null account cursor for mAccountId %d", accountId);
+            return null;
+        }
+
+        com.android.mail.providers.Account account = null;
+        try {
+            if (accountCursor.moveToFirst()) {
+                account = com.android.mail.providers.Account.builder().buildFrom(accountCursor);
+            }
+        } finally {
+            accountCursor.close();
+        }
+
+
+        final Cursor folderCursor = contentResolver.query(
+                EmailProvider.uiUri("uifolder", mailboxId),
+                UIProvider.FOLDERS_PROJECTION, null, null, null);
+
+        if (folderCursor == null) {
+            LogUtils.e(LOG_TAG, "Null folder cursor for account %d, mailbox %d",
+                    accountId, mailboxId);
+            return null;
+        }
+
+        Folder folder = null;
+        try {
+            if (folderCursor.moveToFirst()) {
+                folder = new Folder(folderCursor);
+            } else {
+                LogUtils.e(LOG_TAG, "Empty folder cursor for account %d, mailbox %d",
+                        accountId, mailboxId);
+                return null;
+            }
+        } finally {
+            folderCursor.close();
+        }
+
+        Intent intent = Utils.createViewFolderIntent(this, folder.folderUri.fullUri, account);
+
+        /**
+         * M: If intent is for view mail(conversation), Create a view mail intent
+         * instead of a view folder intent @{
+         */
+        if (messageId != Message.NO_MESSAGE) {
+            // we used uimessages not uiconversation cause we need the value of rawfolders.
+            Cursor cursor = getContentResolver().query(EmailProvider.uiUri("uimessages", folder.id),
+                    UIProvider.CONVERSATION_PROJECTION, null, null, null);
+            if (cursor == null) {
+                LogUtils.e(LOG_TAG, "Get conversation cursor failed");
+                return intent;
+            }
+            Conversation conversation = null;
+            try {
+                while (cursor.moveToNext()) {
+                    if (cursor.getLong(UIProvider.CONVERSATION_ID_COLUMN) == messageId) {
+                        LogUtils.d(LOG_TAG, "Get the conversation : %d", messageId);
+                        conversation = new Conversation(cursor);
+                        break;
+                    }
+                }
+            } finally {
+                cursor.close();
+            }
+            if (conversation != null) {
+                intent = Utils.createViewConversationIntent(this, conversation, folder.folderUri.fullUri, account);
+            }
+        }
+        /** @}*/
+
+        return intent;
+    }
+
+    @Override
+    public void onResume() {
+        PDebug.Start("MailActivityEmail.onResume");
+        com.android.mail.providers.Account acct = getAccountController().getAccount();
+        if (acct != null) {
+            /** M: start record the account using as well as reset the flags @{ */
+            DataCollectUtils.startRecord(this, Long.parseLong(acct.uri.getLastPathSegment()), sRecordOpening);
+            sRecordOpening = true;
+            sEmailActivityResumed = true;
+            /** @} */
+        }
+        super.onResume();
+        PDebug.End("MailActivityEmail.onResume");
+    }
+
+    @Override
+    public void onPause() {
+        /** M: stop the account using recording @{ */
+        DataCollectUtils.stopRecord(this);
+        // This is the situation that user back to home screen,
+        // so clear the recorded list. We do not record the opening again when
+        // just launching other activities (sRecordOpening is false), or just
+        // the "remote search" EmailActivity paused.
+        if (sRecordOpening
+                && getIntent() != null
+                && !Intent.ACTION_SEARCH.equalsIgnoreCase(getIntent().getAction())) {
+            DataCollectUtils.clearRecordedList();
+        }
+        /** @} */
+        super.onPause();
+    }
+}
