Index: packages/services/Telephony/res/values-es-rUS/strings.xml
===================================================================
--- packages/services/Telephony/res/values-es-rUS/strings.xml	(revision 4906)
+++ packages/services/Telephony/res/values-es-rUS/strings.xml	(revision 4907)
@@ -1367,5 +1367,6 @@
     <string name="change_pin_system_error">No se puede establecer el PIN</string>
     <string name="dialog_voicemail_not_ready_message">Para configurar el buzón de voz, vaya a Menú &gt; Ajustes.</string>
     <string name="fdn_list_dialog_call">Dial contact</string>
-    <string name="fdn_list_dialog_edit">Edit contact</string>
+    <string name="fdn_list_dialog_edit">Edit contact</string>
+    <string name="menu_sendSMS">"Enviar texto al contacto"</string>
 </resources>
\ No newline at end of file
Index: packages/services/Telephony/res/values/strings.xml
===================================================================
--- packages/services/Telephony/res/values/strings.xml	(revision 4906)
+++ packages/services/Telephony/res/values/strings.xml	(revision 4907)
@@ -1411,4 +1411,5 @@
     <string name="fdn_list_dialog_call">Dial contact</string>
     <string name="fdn_list_dialog_edit">Edit contact</string>
     <string name="fdn_list_dialog_send">Send message to contact</string>
+    <string name="menu_sendSMS">Text contact</string>
 </resources>
\ No newline at end of file
Index: packages/services/Telephony/res/values-pt/strings.xml
===================================================================
--- packages/services/Telephony/res/values-pt/strings.xml	(revision 4906)
+++ packages/services/Telephony/res/values-pt/strings.xml	(revision 4907)
@@ -585,4 +585,5 @@
     <string name="change_pin_succeeded" msgid="2022852286442211151">"PIN do correio de voz atualizado"</string>
     <string name="change_pin_system_error" msgid="8308462387154257840">"Não foi possível definir o PIN"</string>
     <string name="dialog_voicemail_not_ready_message">"Para configurar o correio de voz, vá para Menu &gt; Configurações."</string>
+    <string name="menu_sendSMS">"Enviar SMS/MMS para o contato"</string>
 </resources>
Index: packages/services/Telephony/res/values-es/strings.xml
===================================================================
--- packages/services/Telephony/res/values-es/strings.xml	(revision 4906)
+++ packages/services/Telephony/res/values-es/strings.xml	(revision 4907)
@@ -596,4 +596,5 @@
     <string name="change_pin_succeeded" msgid="2022852286442211151">"Se ha cambiado el PIN del buzón de voz"</string>
     <string name="change_pin_system_error" msgid="8308462387154257840">"No se ha podido configurar el PIN"</string>
     <string name="dialog_voicemail_not_ready_message">"Para configurar el buzón de voz, toca la tecla de menú y, a continuación, toca Ajustes."</string>
+    <string name="menu_sendSMS">"Enviar SMS al contacto"</string>
 </resources>
Index: packages/services/Telephony/res/values-fr-rCA/strings.xml
===================================================================
--- packages/services/Telephony/res/values-fr-rCA/strings.xml	(revision 4906)
+++ packages/services/Telephony/res/values-fr-rCA/strings.xml	(revision 4907)
@@ -589,4 +589,5 @@
     <string name="change_pin_succeeded" msgid="2022852286442211151">"NIP de messagerie vocale mis à jour"</string>
     <string name="change_pin_system_error" msgid="8308462387154257840">"Impossible de définir le NIP"</string>
     <string name="dialog_voicemail_not_ready_message">"Pour configurer la messagerie vocale, accédez à Menu &gt; Paramètres."</string>
+    <string name="menu_sendSMS">"Envoyer un SMS au contact"</string>
 </resources>
Index: packages/services/Telephony/res/values-pt-rPT/strings.xml
===================================================================
--- packages/services/Telephony/res/values-pt-rPT/strings.xml	(revision 4906)
+++ packages/services/Telephony/res/values-pt-rPT/strings.xml	(revision 4907)
@@ -585,4 +585,5 @@
     <string name="change_pin_succeeded" msgid="2022852286442211151">"O PIN do correio de voz foi atualizado"</string>
     <string name="change_pin_system_error" msgid="8308462387154257840">"Não é possível definir o seu PIN"</string>
     <string name="dialog_voicemail_not_ready_message">"Para configurar o correio de voz, aceda a Menu &gt; Definições."</string>
+    <string name="menu_sendSMS">"Enviar SMS/MMS para contacto"</string>
 </resources>
Index: packages/services/Telephony/res/values-fr/strings.xml
===================================================================
--- packages/services/Telephony/res/values-fr/strings.xml	(revision 4906)
+++ packages/services/Telephony/res/values-fr/strings.xml	(revision 4907)
@@ -585,4 +585,5 @@
     <string name="change_pin_succeeded" msgid="2022852286442211151">"Le code de votre boîte vocale a été mis à jour."</string>
     <string name="change_pin_system_error" msgid="8308462387154257840">"Impossible de définir le code"</string>
     <string name="dialog_voicemail_not_ready_message">"Pour configurer la messagerie vocale, accédez à Menu &gt; Paramètres."</string>
+    <string name="menu_sendSMS">"Envoyer un SMS au contact"</string>
 </resources>
Index: packages/services/Telephony/res/values-pt-rBR/strings.xml
===================================================================
--- packages/services/Telephony/res/values-pt-rBR/strings.xml	(revision 4906)
+++ packages/services/Telephony/res/values-pt-rBR/strings.xml	(revision 4907)
@@ -1367,5 +1367,6 @@
     <string name="change_pin_system_error">Não é possível definir o PIN</string>
     <string name="dialog_voicemail_not_ready_message">Para configurar o correio de voz, acesse Menu &gt; Configurações.</string>
     <string name="fdn_list_dialog_call">Dial contact</string>
-    <string name="fdn_list_dialog_edit">Edit contact</string>
+    <string name="fdn_list_dialog_edit">Edit contact</string>
+    <string name="menu_sendSMS">"Enviar SMS/MMS para o contato"</string>
 </resources>
\ No newline at end of file
Index: vendor/branch/5058A_Telcel/packages/services/Telephony/src/com/android/phone/settings/fdn/FdnList.java
===================================================================
--- vendor/branch/5058A_Telcel/packages/services/Telephony/src/com/android/phone/settings/fdn/FdnList.java	(revision 0)
+++ vendor/branch/5058A_Telcel/packages/services/Telephony/src/com/android/phone/settings/fdn/FdnList.java	(revision 4907)
@@ -0,0 +1,287 @@
+/*
+ * Copyright (C) 2007 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.phone.settings.fdn;
+
+import android.app.ActionBar;
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.content.res.Resources;
+import android.net.Uri;
+import android.os.Bundle;
+import android.view.Menu;
+import android.view.MenuItem;
+import android.view.View;
+import android.widget.ListView;
+
+import com.android.phone.ADNList;
+import com.android.phone.PhoneGlobals;
+import com.android.phone.R;
+import com.android.phone.SubscriptionInfoHelper;
+
+import android.telecom.PhoneAccountHandle;
+import com.android.phone.PhoneUtils;
+
+import android.content.DialogInterface;
+import android.app.AlertDialog;
+import android.telecom.PhoneAccount;
+import android.telecom.TelecomManager;
+
+/**
+ * Fixed Dialing Number (FDN) List UI for the Phone app. FDN is a feature of the service provider
+ * that allows a user to specify a limited set of phone numbers that the SIM can dial.
+ */
+public class FdnList extends ADNList implements PhoneGlobals.SubInfoUpdateListener {
+    private static final int MENU_ADD = 1;
+    private static final int MENU_EDIT = 2;
+    private static final int MENU_DELETE = 3;
+
+    private static final String INTENT_EXTRA_NAME = "name";
+    private static final String INTENT_EXTRA_NUMBER = "number";
+    private static final String INTENT_EXTRA_ADD = "addContact";
+
+    private static final Uri FDN_CONTENT_URI = Uri.parse("content://icc/fdn");
+    private static final String FDN_CONTENT_PATH_WITH_SUB_ID = "content://icc/fdn/subId/";
+    private SubscriptionInfoHelper mSubscriptionInfoHelper;
+
+    @Override
+    public void onCreate(Bundle icicle) {
+        super.onCreate(icicle);
+
+        ActionBar actionBar = getActionBar();
+        if (actionBar != null) {
+            // android.R.id.home will be triggered in onOptionsItemSelected()
+            actionBar.setDisplayHomeAsUpEnabled(true);
+        }
+
+        mSubscriptionInfoHelper = new SubscriptionInfoHelper(this, getIntent());
+        mSubscriptionInfoHelper.setActionBarTitle(
+                getActionBar(), getResources(), R.string.fdn_list_with_label);
+        ///M: Add for host swap
+        PhoneGlobals.getInstance().addSubInfoUpdateListener(this);
+
+        /// M: listen to SIM and PHB state change to update screen
+        final IntentFilter ifilter = new IntentFilter();
+        ifilter.addAction(Intent.ACTION_AIRPLANE_MODE_CHANGED);
+        registerReceiver(mReceiver, ifilter);
+    }
+
+    @Override
+    protected Uri resolveIntent() {
+        Intent intent = getIntent();
+        intent.setData(getContentUri(mSubscriptionInfoHelper));
+        return intent.getData();
+    }
+
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        super.onCreateOptionsMenu(menu);
+
+        Resources r = getResources();
+
+        // Added the icons to the context menu
+        menu.add(0, MENU_ADD, 0, r.getString(R.string.menu_add))
+                .setIcon(android.R.drawable.ic_menu_add);
+        menu.add(0, MENU_EDIT, 0, r.getString(R.string.menu_edit))
+                .setIcon(android.R.drawable.ic_menu_edit);
+        menu.add(0, MENU_DELETE, 0, r.getString(R.string.menu_delete))
+                .setIcon(android.R.drawable.ic_menu_delete);
+        return true;
+    }
+
+    @Override
+    public boolean onPrepareOptionsMenu(Menu menu) {
+        super.onPrepareOptionsMenu(menu);
+        boolean hasSelection = (getSelectedItemPosition() >= 0);
+
+        menu.findItem(MENU_ADD).setVisible(true);
+        menu.findItem(MENU_EDIT).setVisible(hasSelection);
+        menu.findItem(MENU_DELETE).setVisible(hasSelection);
+
+        return true;
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch (item.getItemId()) {
+            case android.R.id.home:  // See ActionBar#setDisplayHomeAsUpEnabled()
+                Intent intent = mSubscriptionInfoHelper.getIntent(FdnSetting.class);
+                intent.setAction(Intent.ACTION_MAIN);
+                intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
+                startActivity(intent);
+                finish();
+                return true;
+
+            case MENU_ADD:
+                addContact();
+                return true;
+
+            case MENU_EDIT:
+                editSelected();
+                return true;
+
+            case MENU_DELETE:
+                deleteSelected();
+                return true;
+        }
+
+        return super.onOptionsItemSelected(item);
+    }
+
+    @Override
+    public void onListItemClick(ListView l, View v, int position, long id) {
+        // TODO: is this what we really want?
+        //editSelected(position);
+        showItemDialog(position);
+
+    }
+
+    private void showItemDialog(final int positon) {
+        String name = "";
+        if (mCursor.moveToPosition(positon)) {
+            name = mCursor.getString(NAME_COLUMN);
+        }
+
+        final String[] items = new String []{getResources().getString(R.string.fdn_list_dialog_call),
+                                            getResources().getString(R.string.fdn_list_dialog_edit),
+                                            getResources().getString(R.string.menu_delete),
+                                            getResources().getString(R.string.menu_sendSMS)};
+        AlertDialog dialog = new AlertDialog.Builder(this).setTitle(name)
+            .setItems(items, new DialogInterface.OnClickListener() {
+
+                @Override
+                public void onClick(DialogInterface dialog, int which) {
+                    switch(which) {
+                        case 0:
+                            callTheItem(positon);
+                            break;
+                        case 1:
+                            editSelected(positon);
+                            break;
+                        case 2:
+                            deleteSelected(positon);
+                            break;
+                        case 3:
+                            sendSMS(positon);
+                            break;
+                    }
+                }
+            }).create();
+        dialog.show();
+    }
+private void  sendSMS(int position){
+    if (mCursor.moveToPosition(position)) {
+        String number = mCursor.getString(NUMBER_COLUMN);
+            Intent intentsms= new Intent(Intent.ACTION_SENDTO, Uri.parse("smsto:"+number));
+            startActivity(intentsms);
+    }
+}
+    private void callTheItem (int position) {
+        if (mCursor.moveToPosition(position)) {
+
+            String number = mCursor.getString(NUMBER_COLUMN);
+
+            PhoneAccountHandle phoneAccountHandle = PhoneUtils.makePstnPhoneAccountHandle(mSubscriptionInfoHelper.getPhone());
+            Uri uri = Uri.fromParts(PhoneAccount.SCHEME_SIP, number, null);
+            final Intent intent = new Intent(Intent.ACTION_CALL, uri);
+            final Bundle b = new Bundle();
+            b.putInt("com.android.dialer.EXTRA_CALL_INITIATION_TYPE", 2);
+            intent.putExtra(TelecomManager.EXTRA_OUTGOING_CALL_EXTRAS, b);
+            intent.putExtra(TelecomManager.EXTRA_PHONE_ACCOUNT_HANDLE, phoneAccountHandle);
+            startActivity(intent);
+        }
+
+    }
+
+    private void addContact() {
+        //If there is no INTENT_EXTRA_NAME provided, EditFdnContactScreen treats it as an "add".
+        Intent intent = mSubscriptionInfoHelper.getIntent(EditFdnContactScreen.class);
+        intent.putExtra(INTENT_EXTRA_ADD, true);
+        startActivity(intent);
+    }
+
+    /**
+     * Overloaded to call editSelected with the current selection
+     * by default.  This method may have a problem with touch UI
+     * since touch UI does not really have a concept of "selected"
+     * items.
+     */
+    private void editSelected() {
+        editSelected(getSelectedItemPosition());
+    }
+
+    /**
+     * Edit the item at the selected position in the list.
+     */
+    private void editSelected(int position) {
+        if (mCursor.moveToPosition(position)) {
+            String name = mCursor.getString(NAME_COLUMN);
+            String number = mCursor.getString(NUMBER_COLUMN);
+
+            Intent intent = mSubscriptionInfoHelper.getIntent(EditFdnContactScreen.class);
+            intent.putExtra(INTENT_EXTRA_NAME, name);
+            intent.putExtra(INTENT_EXTRA_NUMBER, number);
+            intent.putExtra(INTENT_EXTRA_ADD, false);
+            startActivity(intent);
+        }
+    }
+    private void deleteSelected() {
+        deleteSelected(getSelectedItemPosition());
+    }
+    private void deleteSelected(int position) {
+        if (mCursor.moveToPosition(position)) {
+            String name = mCursor.getString(NAME_COLUMN);
+            String number = mCursor.getString(NUMBER_COLUMN);
+
+            Intent intent = mSubscriptionInfoHelper.getIntent(DeleteFdnContactScreen.class);
+            intent.putExtra(INTENT_EXTRA_NAME, name);
+            intent.putExtra(INTENT_EXTRA_NUMBER, number);
+            startActivity(intent);
+        }
+    }
+
+    /**
+     * Returns the uri for updating the ICC FDN entry, taking into account the subscription id.
+     */
+    public static Uri getContentUri(SubscriptionInfoHelper subscriptionInfoHelper) {
+        return subscriptionInfoHelper.hasSubId()
+                ? Uri.parse(FDN_CONTENT_PATH_WITH_SUB_ID + subscriptionInfoHelper.getSubId())
+                : FDN_CONTENT_URI;
+    }
+
+    @Override
+    public void onDestroy() {
+        super.onDestroy();
+        PhoneGlobals.getInstance().removeSubInfoUpdateListener(this);
+    }
+
+    @Override
+    public void handleSubInfoUpdate() {
+        finish();
+    }
+
+    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
+        @Override
+        public void onReceive(Context context, Intent intent) {
+            if (Intent.ACTION_AIRPLANE_MODE_CHANGED.equals(intent.getAction())) {
+                log("AIRPLANE_MODE_CHANGED, so finish FDN Settings");
+                finish();
+            }
+        }
+    };
+}
