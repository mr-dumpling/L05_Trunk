Index: vendor/branch/5058A_Etecsa_Cuba/packages/providers/ContactsProvider/src/com/android/providers/contacts/DefaultCallLogInsertionHelper.java
===================================================================
--- vendor/branch/5058A_Etecsa_Cuba/packages/providers/ContactsProvider/src/com/android/providers/contacts/DefaultCallLogInsertionHelper.java	(revision 12701)
+++ vendor/branch/5058A_Etecsa_Cuba/packages/providers/ContactsProvider/src/com/android/providers/contacts/DefaultCallLogInsertionHelper.java	(revision 12702)
@@ -134,27 +134,28 @@
 
     @Override
     public String getGeocodedLocationFor(String number, String countryIso) {
-        /// M: Comment out because it can not find GeoCodingQuery @{
-        if (ContactsProviderUtils.isPhoneNumberGeo()) {
-            GeoCodingQuery geoCodingQuery = GeoCodingQuery.getInstance(mContext);
-            String cityName = geoCodingQuery.queryByNumber(number);
-            Log.d(TAG, "[GeoCodingQuery] cityName = " + cityName);
-            if (!TextUtils.isEmpty(cityName)) {
-                return cityName;
-            }
-        }
-        /// @}
-        PhoneNumber structuredPhoneNumber = parsePhoneNumber(number, countryIso);
-        if (structuredPhoneNumber != null) {
-            /**
-             * M: Original code:
-            return getPhoneNumberOfflineGeocoder().getDescriptionForNumber(
-                    structuredPhoneNumber, mLocale);
-             */
-            return getPhoneNumberOfflineGeocoder().getDescriptionForNumber(
-                    structuredPhoneNumber, mContext.getResources().getConfiguration().locale);
-        } else {
-            return null;
-        }
+        return null;
+        // /// M: Comment out because it can not find GeoCodingQuery @{
+        // if (ContactsProviderUtils.isPhoneNumberGeo()) {
+        //     GeoCodingQuery geoCodingQuery = GeoCodingQuery.getInstance(mContext);
+        //     String cityName = geoCodingQuery.queryByNumber(number);
+        //     Log.d(TAG, "[GeoCodingQuery] cityName = " + cityName);
+        //     if (!TextUtils.isEmpty(cityName)) {
+        //         return cityName;
+        //     }
+        // }
+        // /// @}
+        // PhoneNumber structuredPhoneNumber = parsePhoneNumber(number, countryIso);
+        // if (structuredPhoneNumber != null) {
+        //     /**
+        //      * M: Original code:
+        //     return getPhoneNumberOfflineGeocoder().getDescriptionForNumber(
+        //             structuredPhoneNumber, mLocale);
+        //      */
+        //     return getPhoneNumberOfflineGeocoder().getDescriptionForNumber(
+        //             structuredPhoneNumber, mContext.getResources().getConfiguration().locale);
+        // } else {
+        //     return null;
+        // }
     }
 }
Index: vendor/branch/5058A_Etecsa_Cuba/packages/apps/Dialer/InCallUI/src/com/android/incallui/CallerInfo.java
===================================================================
--- vendor/branch/5058A_Etecsa_Cuba/packages/apps/Dialer/InCallUI/src/com/android/incallui/CallerInfo.java	(revision 12701)
+++ vendor/branch/5058A_Etecsa_Cuba/packages/apps/Dialer/InCallUI/src/com/android/incallui/CallerInfo.java	(revision 12702)
@@ -576,7 +576,8 @@
     public void updateGeoDescription(Context context, String fallbackNumber) {
         String number = TextUtils.isEmpty(phoneNumber) ? fallbackNumber : phoneNumber;
         /// M: Use a more robust function to get geocoded location info @{
-        geoDescription = GeoUtil.getGeocodedLocationFor(context, number);
+        //geoDescription = GeoUtil.getGeocodedLocationFor(context, number);
+        geoDescription = null;
         /// @}
     }
 
