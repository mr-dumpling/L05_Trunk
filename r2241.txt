Index: frameworks/base/services/core/java/com/android/server/policy/PhoneWindowManager.java
===================================================================
--- frameworks/base/services/core/java/com/android/server/policy/PhoneWindowManager.java	(revision 2240)
+++ frameworks/base/services/core/java/com/android/server/policy/PhoneWindowManager.java	(revision 2241)
@@ -6692,7 +6692,6 @@
             }
 			//add by wqq start{
 			case KeyEvent.KEYCODE_U:		
-					Log.d("WQQ", "KEYCODE= "+keyCode);
 					int doubleTapEnabled = Secure.getInt(
                     	mContext.getContentResolver(), Secure.DOUBLE_TAP_SCREEN_ENABLE, 0);
 					if(!mPowerManager.isScreenOn() && (doubleTapEnabled==1)){
@@ -9276,11 +9275,9 @@
 			if ("intent.action.SendKey".equals(action)) {
 				Bundle bundle = intent.getExtras();
 				int keycode = bundle.getInt("KeyCode");
-				Log.i(TAG, "mKeyReceiver:" + keycode);
 				switch(keycode) { 
 					case KeyEvent.KEYCODE_SYSRQ:
 						m3PTouchScreenshot = Secure.getInt(context.getContentResolver(), Secure.THREE_FINGER_SHOTSCREEN_ENABLED, 0)==1;
-						Log.i(TAG, "m3PTouchScreenshot:" + m3PTouchScreenshot);
 						if(m3PTouchScreenshot){
 							Handler handler=new Handler();
 							handler.post(mScreenshotRunnable);
Index: frameworks/base/core/java/com/android/internal/policy/PhoneWindow.java
===================================================================
--- frameworks/base/core/java/com/android/internal/policy/PhoneWindow.java	(revision 2240)
+++ frameworks/base/core/java/com/android/internal/policy/PhoneWindow.java	(revision 2241)
@@ -299,7 +299,7 @@
 
     private boolean mUseDecorContext = false;
 
-	//add by wqq for shorscreen start
+	//add  for shorscreen start
 	private static float downX[]=new float[5];
 	private static float downY[]=new float[5];
 	private static float upX[]=new float[5];
@@ -308,7 +308,7 @@
 	private static float mathY[]=new float[5];
 	private int X_OFFSET=80;
 	private int Y_OFFSET=180;
-	//add by wqq for shorscreen end
+	//add  for shorscreen end
 	
     static class WindowManagerHolder {
         static final IWindowManager sWindowManager = IWindowManager.Stub.asInterface(
@@ -1848,9 +1848,8 @@
         if (DBG_MOTION) {
             Log.d(TAG, "superDispatchTouchEvent = " + event + ", handled = " + handled);
         }
-		//add wqq for shotscreen start{
+		//add for shotscreen start{
 		int count=event.getPointerCount();
-		Log.d("wqq-->", "superDispatchTouchEvent = " + event + ", handled = " + handled+"  count = "+count);
 			if(count==3){
 				switch (event.getAction() & MotionEvent.ACTION_MASK) {
 				case MotionEvent.ACTION_POINTER_DOWN:
@@ -1895,7 +1894,7 @@
 				}
 			}
         return count==3 ? true: handled;
-		//add wqq for shotscreen end}
+		//add  for shotscreen end}
     }
 
     @Override
