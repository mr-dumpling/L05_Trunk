Index: packages/apps/Dialer/src/com/android/dialer/dialpad/DialpadFragment.java
===================================================================
--- packages/apps/Dialer/src/com/android/dialer/dialpad/DialpadFragment.java	(revision 8450)
+++ packages/apps/Dialer/src/com/android/dialer/dialpad/DialpadFragment.java	(revision 8451)
@@ -1114,7 +1114,6 @@
 
     @Override
     public void onClick(View view) {
-        Log.e(TAG, "onClick()");
         /** M: Prevent the event if dialpad is not shown. @{ */
         if (getActivity() != null
                 && !((DialtactsActivity)getActivity()).isDialpadShown()) {
@@ -1319,7 +1318,6 @@
     }
 
     private void handleDialButtonPressed(int type) {
-        Log.e(TAG, "handleDialButtonPressed()");
         if (isDigitsEmpty()) { // No number entered.
             handleDialButtonClickWithEmptyDigits();
         } else {
Index: packages/apps/Dialer/InCallUI/src/com/android/incallui/InCallActivity.java
===================================================================
--- packages/apps/Dialer/InCallUI/src/com/android/incallui/InCallActivity.java	(revision 8450)
+++ packages/apps/Dialer/InCallUI/src/com/android/incallui/InCallActivity.java	(revision 8451)
@@ -211,7 +211,7 @@
 
     @Override
     protected void onCreate(Bundle icicle) {
-        Log.e(this, "onCreate()...  this = " + this);
+        Log.d(this, "onCreate()...  this = " + this);
 
         super.onCreate(icicle);
 
@@ -381,7 +381,7 @@
 
     @Override
     protected void onResume() {
-        Log.e(this, "onResume()...");
+        Log.i(this, "onResume()...");
         super.onResume();
 
         /// M: if there is an incoming call, we need cancel the pending outgoing call and
Index: packages/apps/Dialer/InCallUI/src/com/android/incallui/CallButtonFragment.java
===================================================================
--- packages/apps/Dialer/InCallUI/src/com/android/incallui/CallButtonFragment.java	(revision 8450)
+++ packages/apps/Dialer/InCallUI/src/com/android/incallui/CallButtonFragment.java	(revision 8451)
@@ -263,7 +263,6 @@
 
     @Override
     public void onResume() {
-        Log.e(this, "onResume()" );
         if (getPresenter() != null) {
             getPresenter().refreshMuteState();
         }
Index: packages/apps/Dialer/InCallUI/src/com/android/incallui/InCallPresenter.java
===================================================================
--- packages/apps/Dialer/InCallUI/src/com/android/incallui/InCallPresenter.java	(revision 8450)
+++ packages/apps/Dialer/InCallUI/src/com/android/incallui/InCallPresenter.java	(revision 8451)
@@ -797,7 +797,7 @@
 
         InCallState newState = getPotentialStateFromCallList(callList);
         InCallState oldState = mInCallState;
-        Log.e(this, "onCallListChange oldState= " + oldState + " newState=" + newState);
+        Log.d(this, "onCallListChange oldState= " + oldState + " newState=" + newState);
         newState = startOrFinishUi(newState);
         Log.d(this, "onCallListChange newState changed to " + newState);
 
@@ -1933,7 +1933,7 @@
             }
         /// M: Fix ALPS01825035. @{
         } else if (needShowUiImmediately) {
-            Log.e(this, "Start InCallActivity with new intent.");
+            Log.i(this, "Start InCallActivity with new intent.");
             showInCall(false, false);
         /// @}
         } else {
@@ -2019,7 +2019,7 @@
     }
 
     public void showInCall(final boolean showDialpad, final boolean newOutgoingCall) {
-        Log.e(this, "Showing InCallActivity");
+        Log.i(this, "Showing InCallActivity");
         mContext.startActivity(getInCallIntent(showDialpad, newOutgoingCall));
     }
 
Index: packages/apps/Dialer/InCallUI/src/com/android/incallui/CallButtonPresenter.java
===================================================================
--- packages/apps/Dialer/InCallUI/src/com/android/incallui/CallButtonPresenter.java	(revision 8450)
+++ packages/apps/Dialer/InCallUI/src/com/android/incallui/CallButtonPresenter.java	(revision 8451)
@@ -569,7 +569,7 @@
         final boolean canHangupActiveAndAnswerWaiting = InCallUtils
                 .canHangupActiveAndAnswerWaiting()
                 && FeatureOptionWrapper.isSupportHangupAll();
-        Log.e(this, "[updateButtonsState] Swap:" + showSwap + " OnHold:"
+        Log.d(this, "[updateButtonsState] Swap:" + showSwap + " OnHold:"
                 + isCallOnHold + " AddCall:" + showAddCall + " Merge:"
                 + showMerge + " Mute:" + showMute + " SetEct:" + canSetEct
                 + " Hangup[AllCalls:" + canHangupAllCalls + " AllHoldCalls:"
Index: packages/apps/Dialer/InCallUI/src/com/android/incallui/CallList.java
===================================================================
--- packages/apps/Dialer/InCallUI/src/com/android/incallui/CallList.java	(revision 8450)
+++ packages/apps/Dialer/InCallUI/src/com/android/incallui/CallList.java	(revision 8451)
@@ -106,7 +106,7 @@
         Trace.beginSection("onCallAdded");
         final Call call = new Call(telecomCall);
         /// M: log enhancement @{
-        Log.e(this, "onCallAdded: callState=" + call.getState()
+        Log.d(this, "onCallAdded: callState=" + call.getState()
                 + ", incallui call id=" + call.getId()
                 + ", telcom call =" + telecomCall);
         /// @}
