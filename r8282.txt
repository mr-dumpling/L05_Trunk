Index: vendor/branch/5058A_Claro_Dominicana/vendor/mediatek/proprietary/packages/apps/Mms/src/com/mediatek/setting/SmsPreferenceActivity.java
===================================================================
--- vendor/branch/5058A_Claro_Dominicana/vendor/mediatek/proprietary/packages/apps/Mms/src/com/mediatek/setting/SmsPreferenceActivity.java	(revision 8281)
+++ vendor/branch/5058A_Claro_Dominicana/vendor/mediatek/proprietary/packages/apps/Mms/src/com/mediatek/setting/SmsPreferenceActivity.java	(revision 8282)
@@ -268,8 +268,13 @@
                     = (PreferenceCategory) findPreference("pref_key_sms_settings");
             mSmsInputMode = (ListPreference) findPreference(SMS_INPUT_MODE);
             if (mSmsInputMode != null) {
-                //smsCategory.removePreference(mSmsInputMode);
-                mSmsInputMode.setOnPreferenceChangeListener(this);
+				boolean bFrSmsEncoding = getResources().getBoolean(com.android.internal.R.bool.FR_SMS_ENCODING);
+				if(bFrSmsEncoding){
+					mSmsInputMode.setOnPreferenceChangeListener(this);
+				}else{
+					smsCategory.removePreference(mSmsInputMode);
+				}
+                
             }
         }
     }
@@ -564,7 +569,10 @@
         MmsConfig.setInitQuickText(true);
 
         mOpSmsPreferenceActivityExt.restoreDefaultPreferences(this, editor);
-        editor.putString(SMS_INPUT_MODE, "Automatic"); // Add this
+		boolean bFrSmsEncoding = getResources().getBoolean(com.android.internal.R.bool.FR_SMS_ENCODING);
+		if(bFrSmsEncoding){
+			editor.putString(SMS_INPUT_MODE, "Automatic"); // Add this
+		}
         editor.apply();
         setPreferenceScreen(null);
         setMessagePreferences();
@@ -578,19 +586,19 @@
         }
 
         final String key = preference.getKey();
-        if (SMS_INPUT_MODE.equals(key)) {
-            MmsLog.d(TAG, "Input Mode Changed");
-            mSmsInputMode.setValue((String) arg1);
-        } else if (preference == mSmsLocation && !(SimStateMonitor.getInstance().getSubCount() > 1)) {
-            if (!getResources().getBoolean(R.bool.isTablet)) {
-                mSmsLocation.setSummary(MessageUtils.getVisualTextName(this, (String) arg1,
-                        R.array.pref_sms_save_location_choices,
-                        R.array.pref_sms_save_location_values));
-            } else {
-                mSmsLocation.setSummary(MessageUtils.getVisualTextName(this, (String) arg1,
-                        R.array.pref_tablet_sms_save_location_choices,
-                        R.array.pref_tablet_sms_save_location_values));
-            }
+            if (SMS_INPUT_MODE.equals(key)) {
+                MmsLog.d(TAG, "Input Mode Changed");
+                mSmsInputMode.setValue((String) arg1);
+            }else if (preference == mSmsLocation && !(SimStateMonitor.getInstance().getSubCount() > 1)) {
+				if (!getResources().getBoolean(R.bool.isTablet)) {
+					mSmsLocation.setSummary(MessageUtils.getVisualTextName(this, (String) arg1,
+							R.array.pref_sms_save_location_choices,
+							R.array.pref_sms_save_location_values));
+				} else {
+					mSmsLocation.setSummary(MessageUtils.getVisualTextName(this, (String) arg1,
+							R.array.pref_tablet_sms_save_location_choices,
+							R.array.pref_tablet_sms_save_location_values));
+				}
         }
 
         return true;
Index: vendor/branch/5058A_Claro_Dominicana/build/tools/buildinfo.sh
===================================================================
--- vendor/branch/5058A_Claro_Dominicana/build/tools/buildinfo.sh	(revision 0)
+++ vendor/branch/5058A_Claro_Dominicana/build/tools/buildinfo.sh	(revision 8282)
@@ -0,0 +1,69 @@
+#!/bin/bash 
+echo "# begin build properties"
+echo "# autogenerated by buildinfo.sh"
+
+echo "ro.build.id=$BUILD_ID"
+echo "ro.build.display.id=5058A_AVDO1_V1.0_180210"
+echo "ro.build.version.custintid=5058A_AVDO1_V1.0_180210"
+echo "ro.build.version.incremental=AVDO1_5058A_L030_S01_180210"
+echo "ro.tct.sys.ver=O58ADO01"
+echo "ro.build.hardware.version=PIO"
+echo "ro.build.display.factoryid=Plat:5058A_AVDO1_S01_180210Outer:5058A_AVDO1_V1.0_180210End"
+echo "ro.build.version.sdk=$PLATFORM_SDK_VERSION"
+echo "ro.build.version.preview_sdk=$PLATFORM_PREVIEW_SDK_VERSION"
+echo "ro.build.version.codename=$PLATFORM_VERSION_CODENAME"
+echo "ro.build.version.all_codenames=$PLATFORM_VERSION_ALL_CODENAMES"
+echo "ro.build.version.release=$PLATFORM_VERSION"
+echo "ro.build.version.security_patch=$PLATFORM_SECURITY_PATCH"
+echo "ro.build.version.base_os=$PLATFORM_BASE_OS"
+echo "ro.build.date=`$DATE`"
+echo "ro.build.date.utc=`$DATE +%s`"
+echo "ro.build.type=$TARGET_BUILD_TYPE"
+echo "ro.build.user=$USER"
+echo "ro.build.host=`hostname`"
+echo "ro.build.tags=release-keys"
+echo "ro.build.flavor=$TARGET_BUILD_FLAVOR"
+if [ -n "$BOARD_BUILD_SYSTEM_ROOT_IMAGE" ] ; then
+  echo "ro.build.system_root_image=$BOARD_BUILD_SYSTEM_ROOT_IMAGE"
+fi
+if [ -n "$AB_OTA_UPDATER" ] ; then
+  echo "ro.build.ab_update=$AB_OTA_UPDATER"
+fi
+echo "ro.product.model=5058A"
+echo "ro.product.brand=TCL"
+echo "ro.product.name=5058A"
+echo "ro.product.device=A3A_PLUS"
+echo "ro.product.board=$TARGET_BOOTLOADER_BOARD_NAME"
+
+# These values are deprecated, use "ro.product.cpu.abilist"
+# instead (see below).
+echo "# ro.product.cpu.abi and ro.product.cpu.abi2 are obsolete,"
+echo "# use ro.product.cpu.abilist instead."
+echo "ro.product.cpu.abi=$TARGET_CPU_ABI"
+if [ -n "$TARGET_CPU_ABI2" ] ; then
+  echo "ro.product.cpu.abi2=$TARGET_CPU_ABI2"
+fi
+echo "ro.product.cpu.abilist=$TARGET_CPU_ABI_LIST"
+echo "ro.product.cpu.abilist32=$TARGET_CPU_ABI_LIST_32_BIT"
+echo "ro.product.cpu.abilist64=$TARGET_CPU_ABI_LIST_64_BIT"
+
+echo "ro.product.manufacturer= TCL"
+if [ -n "$PRODUCT_DEFAULT_LOCALE" ] ; then
+  echo "ro.product.locale=$PRODUCT_DEFAULT_LOCALE"
+fi
+echo "ro.wifi.channels=$PRODUCT_DEFAULT_WIFI_CHANNELS"
+echo "ro.board.platform=$TARGET_BOARD_PLATFORM"
+
+echo "# ro.build.product is obsolete; use ro.product.device"
+echo "ro.build.product=A3A PLUS"
+
+echo "# Do not try to parse description, fingerprint, or thumbprint"
+echo "ro.build.description=$PRIVATE_BUILD_DESC"
+#echo "ro.build.fingerprint=$BUILD_FINGERPRINT"
+echo "ro.build.fingerprint=TCL/5058A/A3A_PLUS:7.1.1/N6F26Q/5058A_AVDO1_V1.0_180211:user/release-keys"
+if [ -n "$BUILD_THUMBPRINT" ] ; then
+  echo "ro.build.thumbprint=$BUILD_THUMBPRINT"
+fi
+echo "ro.build.characteristics=$TARGET_AAPT_CHARACTERISTICS"
+
+echo "# end build properties"
Index: vendor/branch/5058A_Claro_Dominicana/frameworks/base/core/res/res/values/config.xml
===================================================================
--- vendor/branch/5058A_Claro_Dominicana/frameworks/base/core/res/res/values/config.xml	(revision 8281)
+++ vendor/branch/5058A_Claro_Dominicana/frameworks/base/core/res/res/values/config.xml	(revision 8282)
@@ -2487,7 +2487,7 @@
     <integer name="config_mdc_initial_max_retry">1</integer>
 
     <!-- The OEM specified sensor type for the gesture to launch the camera app. -->
-    <integer name="config_cameraLaunchGestureSensorType">-1</integer>
+    <integer name="config_cameraLaunchGestureSensorType">1</integer>
     <!-- The OEM specified sensor string type for the gesture to launch camera app, this value
          must match the value of config_cameraLaunchGestureSensorType in OEM's HAL -->
     <string translatable="false" name="config_cameraLaunchGestureSensorStringType"></string>
