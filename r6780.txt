Index: vendor/mediatek/proprietary/frameworks/base/packages/FwkPlugin/src/com/mediatek/op/telephony/GsmDCTExt.java
===================================================================
--- vendor/mediatek/proprietary/frameworks/base/packages/FwkPlugin/src/com/mediatek/op/telephony/GsmDCTExt.java	(revision 6779)
+++ vendor/mediatek/proprietary/frameworks/base/packages/FwkPlugin/src/com/mediatek/op/telephony/GsmDCTExt.java	(revision 6780)
@@ -76,7 +76,7 @@
 
     public boolean isFdnEnableSupport() {
         // Default is return false, set to true if needed
-        return true;
+        return false;
     }
 
     /** IPV6RA feature. */
Index: frameworks/opt/telephony/src/java/com/android/internal/telephony/dataconnection/DcTracker.java
===================================================================
--- frameworks/opt/telephony/src/java/com/android/internal/telephony/dataconnection/DcTracker.java	(revision 6779)
+++ frameworks/opt/telephony/src/java/com/android/internal/telephony/dataconnection/DcTracker.java	(revision 6780)
@@ -204,14 +204,7 @@
 
     private static final String INTENT_DATA_STALL_ALARM =
             "com.android.internal.telephony.data-stall";
-    // add for FDN
-    Cursor cursor = null;
 
-    private static final String[] COLUMN_NAMES = new String[] {
-            "index"/*MTK*/,
-            "name",
-            "number"
-    };
     @VisibleForTesting
     public static class DataAllowFailReason {
         private HashSet<DataAllowFailReasonType> mDataAllowFailReasonSet = new HashSet<>();
@@ -3582,7 +3575,8 @@
         if (isFdnEnableSupport()) {
             logd("onFdnChanged");
             if (getFdnStatus()) {
-				checkFdnList();
+                logd("fdn enabled, cleanUpAllConnections!");
+                cleanUpAllConnections(true, Phone.REASON_FDN_ENABLED);
             } else {
                 logd("fdn disabled, setupDataOnConnectableApns!");
                 setupDataOnConnectableApns(Phone.REASON_FDN_DISABLED);
@@ -3591,45 +3585,6 @@
             logd("not support fdn enabled, skip onFdnChanged");
         }
     }
-    private Uri getUri(int subId){
-		Uri fdnContentUri;    
-        fdnContentUri = Uri.parse("content://icc/fdn/subId/"+subId);
-        return fdnContentUri;
-	}
-   
-	private void checkFdnList(){
-		new Thread(new Runnable() {
-            @Override
-            public void run() {
-                try {
-                    cursor = mResolver.query(getUri(mPhone.getSubId()),COLUMN_NAMES,null,null,null);
-                    if(cursor != null){
-						List<String> numberList = new ArrayList<String>();
-                        cursor.moveToFirst();
-                        do{
-						   numberList.add(cursor.getString(2));
-                           android.util.Log.i("cursor.count && number",cursor.getCount()+"***"+cursor.getString(2));
-                        }while (cursor.moveToNext());
-						if(numberList != null){
-						if (numberList.contains("*99#")){
-                               setupDataOnConnectableApns(Phone.REASON_FDN_DISABLED);
-                           }else{
-							   cleanUpAllConnections(true, Phone.REASON_FDN_ENABLED);
-						   }
-						}
-                    }
-                } catch (Exception e) {
-                    e.printStackTrace();
-                } finally {
-                    if(cursor != null){
-                        cursor.close();
-                    }
-                }
-            }
-        }).start();
-	}
-	
-	
     //MTK END: Support FDN
 
     public void setApnsEnabledByCarrier(boolean enabled) {
