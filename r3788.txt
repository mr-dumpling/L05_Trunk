Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/AndroidManifest.xml
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/AndroidManifest.xml	(revision 3787)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/AndroidManifest.xml	(revision 3788)
@@ -191,6 +191,9 @@
         <activity
              android:name=".batterylevel.BatteryLevel"
              android:screenOrientation="portrait" />
+		<activity
+             android:name=".AutoTestFinish"
+             android:screenOrientation="portrait" />
             
     </application>
 
Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/AutoTestFinish.java
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/AutoTestFinish.java	(revision 0)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/AutoTestFinish.java	(revision 3788)
@@ -0,0 +1,55 @@
+package com.android.mmi;
+
+
+import android.app.Activity;
+import android.content.Intent;
+import android.os.Bundle;
+import android.view.View;
+import android.view.View.OnClickListener;
+import android.widget.Button;
+import android.widget.TextView;
+import android.view.Window;
+import android.view.WindowManager;
+
+public class AutoTestFinish extends Activity implements OnClickListener{
+   // TextView result ;
+    Button restart;
+    Button poweroff ;
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+		
+		getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
+				WindowManager.LayoutParams.FLAG_FULLSCREEN);
+		getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_IMMERSIVE_GESTURE_ISOLATED);
+		getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON); 
+        
+        setContentView(R.layout.testfinish);
+        restart =(Button) findViewById(R.id.restart);
+        poweroff =(Button) findViewById(R.id.poweroff);
+        restart.setOnClickListener(this);
+        poweroff.setOnClickListener(this);
+    }
+
+    @Override
+    public void onClick(View key) {
+        // TODO Auto-generated method stub
+        switch (key.getId()) {
+        case R.id.restart:
+            Intent i =new Intent();
+					i.setClass(this, MMITestDevice.class);
+					startActivity(i);
+			
+            break;
+        case R.id.poweroff:
+			Intent intent = new Intent("android.intent.action.ACTION_REQUEST_SHUTDOWN");
+            intent.putExtra("android.intent.extra.KEY_CONFIRM", false);
+            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+            startActivity(intent);
+        break;
+
+        default:
+            break;
+        }
+    }
+
+}
Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/chargerled/ChargerLed.java
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/chargerled/ChargerLed.java	(revision 3787)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/chargerled/ChargerLed.java	(revision 3788)
@@ -40,6 +40,8 @@
 			}
 			showCount++;
 			if (showCount == (FLASH_NUMBER - 1) * 2) {
+				bt_base_right.getBackground().setAlpha(100);
+				bt_base_left.getBackground().setAlpha(100);
 				bt_base_left.setVisibility(View.VISIBLE);
 				bt_base_right.setVisibility(View.VISIBLE);
 			}
@@ -79,6 +81,8 @@
 		bt_base_right.setOnClickListener(this);
 		bt_base_left.setVisibility(View.GONE);
 		bt_base_right.setVisibility(View.GONE);
+		bt_base_right.getBackground().setAlpha(100);
+		bt_base_left.getBackground().setAlpha(100);
 		Intent sendled = new Intent(); 
 		sendled.setAction("com.mediatek.factorymode.led.action_red");
 		ChargerLed.this.sendBroadcast(sendled);
Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/audio/Audio.java
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/audio/Audio.java	(revision 3787)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/audio/Audio.java	(revision 3788)
@@ -148,6 +148,7 @@
 			Intent intent = new Intent(Audio.this, MMITestDevice.class);
 			setResult(RESULT_CANCELED, intent);
 			finish();
+			onDestroy();
 			break;
 		}
 
@@ -222,6 +223,17 @@
 	@Override
 	protected void onDestroy() {
 		super.onDestroy();
+		 SystemProperties.set("persist.sys.testearphone", "0");
+        SystemProperties.set("persist.sys.testspeaker", "0");
+        if (musicPlayer != null) {
+            musicPlayer.release();
+            musicPlayer = null;
+        }
+        isMic = false;
+        if(audioManager != null){
+            audioManager.setMode(AudioManager.MODE_NORMAL);            
+			audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, currentVolume, 0); 
+		}
 		if (musicPlayer != null) {
 			musicPlayer.release();
 			musicPlayer = null;
Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/tptwo/TpTwo.java
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/tptwo/TpTwo.java	(revision 3787)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/tptwo/TpTwo.java	(revision 3788)
@@ -28,8 +28,8 @@
 
 public class TpTwo extends Activity {
 	static final float MAX_VELOCITY = 160;
-	static final int MARGIN_WIDTH = 120;
-	static final int LINE_WIDTH = 80;
+	static final int MARGIN_WIDTH = 150;
+	static final int LINE_WIDTH = 100;
 	static final int ERROR_RANGE = 120;
 
 	private View mLineView;
Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/keypad/Keypad.java
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/keypad/Keypad.java	(revision 3787)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/keypad/Keypad.java	(revision 3788)
@@ -63,10 +63,12 @@
 
 		bt_base_left = (Button) findViewById(R.id.bt_base_left);
 		bt_base_left.setText(R.string.bt_pass);
+		bt_base_left.getBackground().setAlpha(100);
 		bt_base_left.setEnabled(false);
 		bt_base_left.setOnClickListener(this);
 		bt_base_right = (Button) findViewById(R.id.bt_base_right);
 		bt_base_right.setText(R.string.bt_fail);
+		bt_base_right.getBackground().setAlpha(100);
 		bt_base_right.setOnClickListener(this);
 	}
 
Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/fingerprint/Fingerprint.java
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/fingerprint/Fingerprint.java	(revision 3787)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/fingerprint/Fingerprint.java	(revision 3788)
@@ -8,7 +8,7 @@
 import android.view.WindowManager;
 import android.widget.Button;
 import android.widget.TextView;
-
+import android.view.Window;
 import android.view.View.OnClickListener;
 import com.android.mmi.MMITestDevice;
 import com.android.mmi.R;
@@ -66,7 +66,8 @@
 				
 				super.handleMessage(msg);
 				if(result4Flag == true && result5Flag == true && result6Flag == true 
-					&& result1Flag == true && result2Flag == true && result3Flag == true){
+					 && result2Flag == true && result3Flag == true){
+					result1.setText("pass");
 					bt_base_left.setEnabled(true);
 				}
 			}
@@ -76,6 +77,11 @@
 		// TODO Auto-generated method stub
 		super.onCreate(savedInstanceState);
 		//getWindow().addFlags(WindowManager.LayoutParams.FLAG_HOMEKEY_DISPATCHED);
+		requestWindowFeature(Window.FEATURE_NO_TITLE);
+		getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
+				WindowManager.LayoutParams.FLAG_FULLSCREEN);
+		getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_IMMERSIVE_GESTURE_ISOLATED);
+		getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
 		setContentView(R.layout.activity_fingerprint);
 
 		mFingerprintManager = this.getSystemService(FingerprintManager.class);
@@ -105,8 +111,8 @@
 	
 		bt_base_left.setEnabled(false);
 	if(getFingerflag().equalsIgnoreCase("0x1")){
-			result1.setText("pass");
-			result1Flag=true;
+		//	result1.setText("pass");
+		//	result1Flag=true;
 			result2.setText("pass");
 			result2Flag=true;
 			result3.setText("pass");
Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/MyReceiver.java
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/MyReceiver.java	(revision 0)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/MyReceiver.java	(revision 3788)
@@ -0,0 +1,23 @@
+package com.android.mmi;
+
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+
+public class MyReceiver extends BroadcastReceiver
+{
+    public MyReceiver()
+    {
+    }
+
+    @Override
+    public void onReceive(Context context, Intent intent)
+    {
+        if (intent.getAction().equals("android.intent.action.BOOT_COMPLETED"))
+        {
+            Intent i = new Intent(context, MMITestDevice.class);
+            i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+            context.startActivity(i);
+        }
+    }
+}
\ No newline at end of file
Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/accessory/Accessory.java
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/accessory/Accessory.java	(revision 3787)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/accessory/Accessory.java	(revision 3788)
@@ -88,6 +88,8 @@
 		bt_base_right = (Button) findViewById(R.id.bt_base_right);
 		bt_base_right.setText(R.string.bt_fail);
 		bt_base_right.setOnClickListener(this);
+		bt_base_right.getBackground().setAlpha(100);
+		bt_base_left.getBackground().setAlpha(100);
 
 	}
 
Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/tplock/TpLock.java
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/tplock/TpLock.java	(revision 3787)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/tplock/TpLock.java	(revision 3788)
@@ -8,7 +8,7 @@
 import android.view.WindowManager;
 import android.widget.Button;
 import android.widget.TextView;
-
+import android.view.Window;
 import android.view.View.OnClickListener;
 import com.android.mmi.MMITestDevice;
 import com.android.mmi.R;
@@ -34,6 +34,11 @@
 		// TODO Auto-generated method stub
 		super.onCreate(savedInstanceState);
 		//getWindow().addFlags(WindowManager.LayoutParams.FLAG_HOMEKEY_DISPATCHED);
+		requestWindowFeature(Window.FEATURE_NO_TITLE);
+		getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
+				WindowManager.LayoutParams.FLAG_FULLSCREEN);
+		getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_IMMERSIVE_GESTURE_ISOLATED);
+		getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
 		setContentView(R.layout.activity_tplock);
 
 		pm = (PowerManager)getSystemService(Context.POWER_SERVICE);
Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/sdcard/SdCard.java
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/sdcard/SdCard.java	(revision 3787)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/sdcard/SdCard.java	(revision 3788)
@@ -25,8 +25,8 @@
 import android.util.Log;
 public class SdCard extends Activity implements OnClickListener {
 	public static final String TAG = "SDCard";
-	private static String SD_CARD = SystemProperties.get("vold.path.external_sd");
-    //private static String SD_CARD = "/storage/sdcard0";
+	//private static String SD_CARD = SystemProperties.get("vold.path.external_sd");
+    private static String SD_CARD = "/storage/sdcard1";
 	TextView tv_base_title, tv_base_pixi;
 
 	Button bt_base_left, bt_base_right;
@@ -58,15 +58,7 @@
 				.getSystemService(Context.STORAGE_SERVICE);
 		if (mStorageManager.getVolumeState(SD_CARD).equals(
 				Environment.MEDIA_MOUNTED)) {
-			long availableMB = getAvailaleSize();
-			long totalMB = getAllSize();
-			tv_base_pixi.setText("SDCard tips success" + "\n\n"
-					+ "SDCard totalsize" + totalMB
-					+ " MB\n\n" + "SDCard freesize"
-					+ availableMB + " MB");
-			if (totalMB != 0) {
-				bt_base_left.setEnabled(true);
-			}
+			showSize();
 
 		} else {
 			tv_base_pixi.setText("SDCard tips failed");
@@ -99,17 +91,8 @@
 				  }else if (action.equals(Intent.ACTION_MEDIA_SCANNER_STARTED)){
 					 
 				  }else if (action.equals(Intent.ACTION_MEDIA_SCANNER_FINISHED)){
+					showSize();
 	
-	
-				  long availableMB = getAvailaleSize();
-				  long totalMB = getAllSize();
-				  tv_base_pixi.setText("SDCard tips success" + "\n\n"
-						  + "SDCard totalsize" + totalMB
-						  + " MB\n\n" + "SDCard freesize"
-						  + availableMB + " MB");
-				  if (totalMB != 0) {
-					  bt_base_left.setEnabled(true);
-				  }
 					
 				  }else {	 
 					 
@@ -165,4 +148,43 @@
 		}
 		return super.onKeyUp(keyCode, event);
 	}
+		public void showSize() {
+						long availableMB = //getAvailableExternalMemorySize();//
+						getAvailaleSize();
+				  		long totalMB = //getTotalExternalMemorySize();//
+				  		getAllSize();
+					    tv_base_pixi.setText("SDCard tips success" + "\n\n"
+						  + "SDCard totalsize" + totalMB
+						  + " MB\n\n" + "SDCard freesize"
+						  + availableMB + " MB");
+				  if (totalMB != 0) {
+					  bt_base_left.setEnabled(true);
+				  }
+					  }
+		static public boolean isExternalStorageAvailable() { 
+    return Environment.getExternalStorageState().equals( 
+            Environment.MEDIA_MOUNTED); 
+}  
+    static public long getAvailableExternalMemorySize() {
+        if (isExternalStorageAvailable()) {
+            File path = Environment.getExternalStorageDirectory();
+            StatFs stat = new StatFs(path.getPath());
+            long blockSize = stat.getBlockSize();
+            long availableBlocks = stat.getAvailableBlocks();
+            return availableBlocks * blockSize / 1024 / 1024;
+        } else {
+            return -1;
+        }
+    }
+    static public long getTotalExternalMemorySize() {
+        if (isExternalStorageAvailable()) {
+            File path = Environment.getExternalStorageDirectory(); 
+            StatFs stat = new StatFs(path.getPath());
+            long blockSize = stat.getBlockSize();
+            long totalBlocks = stat.getBlockCount();
+            return totalBlocks * blockSize / 1024 / 1024;
+        } else {
+            return -1;
+        }
+    }
 }
Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/compass/Compass.java
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/compass/Compass.java	(revision 3787)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/compass/Compass.java	(revision 3788)
@@ -8,7 +8,7 @@
 import android.view.WindowManager;
 import android.widget.Button;
 import android.widget.TextView;
-
+import android.view.Window;
 import android.view.View.OnClickListener;
 import com.android.mmi.MMITestDevice;
 import com.android.mmi.R;
@@ -52,6 +52,11 @@
 		// TODO Auto-generated method stub
 		super.onCreate(savedInstanceState);
 		//getWindow().addFlags(WindowManager.LayoutParams.FLAG_HOMEKEY_DISPATCHED);
+		requestWindowFeature(Window.FEATURE_NO_TITLE);
+		getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
+				WindowManager.LayoutParams.FLAG_FULLSCREEN);
+		getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_IMMERSIVE_GESTURE_ISOLATED);
+		getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
 		setContentView(R.layout.activity_compass);
 		mRegisteredSensor = false;
 
Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/tracability/Tracability.java
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/tracability/Tracability.java	(revision 3787)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/tracability/Tracability.java	(revision 3788)
@@ -171,10 +171,13 @@
 	}
 
 	public static void setMMITestResult(byte result) {
+		if(null!=product_info){
 		product_info[MMI] = result;
+		}
 		try 
 		{
-			agent.writeFile(PRODUCT_INFO_NVRAM_LID, product_info);
+	//		agent.writeFile(PRODUCT_INFO_NVRAM_LID, product_info);
+			agent.writeFileByName(PRODUCT_INFO_NVRAM_PATH, product_info);
 		}catch(Exception e){
 			e.printStackTrace();
 			return ;
Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/res/layout/activity_tprawdata.xml
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/res/layout/activity_tprawdata.xml	(revision 3787)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/res/layout/activity_tprawdata.xml	(revision 3788)
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
-<LinearLayout
+<RelativeLayout
 	android:orientation="vertical"
 	android:layout_width="fill_parent"
 	android:layout_height="fill_parent"
@@ -16,7 +16,8 @@
 		android:id="@+id/tprawdata_content"
 		android:layout_width="wrap_content"
 		android:layout_height="wrap_content"
-		android:text="@string/tprawdata_content" />
+		android:text="@string/tprawdata_content"
+		android:layout_centerInParent="true"/>
 		
     <include
         android:layout_width="match_parent"
@@ -23,4 +24,4 @@
         android:layout_height="wrap_content"
         android:layout_alignParentBottom="true"
         layout="@layout/base_button" />
-</LinearLayout>
\ No newline at end of file
+</RelativeLayout>
\ No newline at end of file
Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/res/layout/activity_fingerprint.xml
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/res/layout/activity_fingerprint.xml	(revision 3787)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/res/layout/activity_fingerprint.xml	(revision 3788)
@@ -31,7 +31,7 @@
         android:layout_width="0dp"
         android:layout_weight="1"
         android:layout_height="wrap_content"
-        android:text="@string/bt_fail"
+        android:text="@string/testing"
         android:gravity="center"
         android:textSize="20dp"
         />
Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/res/layout/base_button.xml
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/res/layout/base_button.xml	(revision 3787)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/res/layout/base_button.xml	(revision 3788)
@@ -15,7 +15,7 @@
         android:layout_weight="1"
         android:background="@drawable/button_bg"
         android:gravity="center"
-        android:textColor="@color/black"
+        android:textColor="@color/green"
         android:textSize="@dimen/base_bottom_button_textsize" />
 
     <Button
@@ -26,7 +26,7 @@
         android:layout_weight="1"
         android:background="@drawable/button_bg"
         android:gravity="center"
-        android:textColor="@color/black"
+        android:textColor="@color/red"
         android:textSize="@dimen/base_bottom_button_textsize" />
 
 </LinearLayout>
\ No newline at end of file
Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/res/layout/testfinish.xml
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/res/layout/testfinish.xml	(revision 0)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/res/layout/testfinish.xml	(revision 3788)
@@ -0,0 +1,45 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+	android:background="@color/green"
+     >
+
+    <TextView
+        android:id="@+id/textView1"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerHorizontal="true"
+        android:text="@string/autotest_name" />
+
+    <TextView
+        android:id="@+id/textView2"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerInParent="true"
+        android:text="@string/all_passed" />
+
+    <LinearLayout
+        android:id="@+id/linearLayout1"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_alignParentBottom="true"
+        android:orientation="horizontal" >
+
+        <Button
+            android:id="@+id/restart"
+            android:layout_width="0dp"
+            android:layout_weight="1"
+            android:layout_height="wrap_content"
+            android:text="@string/restart" />
+
+        <Button
+            android:id="@+id/poweroff"
+            android:layout_width="0dp"
+            android:layout_weight="1"
+            android:layout_height="wrap_content"
+            android:layout_marginBottom="22dp"
+            android:text="@string/power_off" />
+    </LinearLayout>
+
+</RelativeLayout>
\ No newline at end of file
Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/res/values/strings.xml
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/res/values/strings.xml	(revision 3787)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/res/values/strings.xml	(revision 3788)
@@ -97,7 +97,10 @@
 	<string name="compass_title">Compass</string>
 	<string name="battery_level_name">Battery level</string>
 	<string name="power_off">power off</string>
+	<string name="restart">RESTART</string>
+	<string name="all_passed">ALL PASSED</string>
 	<string name="not_test">Not Test</string>
+	<string name="testing">Testing</string>
 	<string name="auto_test">Auto test</string>
 	<string name="reset_test">Reset test</string>
 	<string name="spi_test">SPI test</string>
