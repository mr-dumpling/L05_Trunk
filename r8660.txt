Index: vendor/branch/5058A_Claro/packages/apps/Dialer/AndroidManifest.xml
===================================================================
--- vendor/branch/5058A_Claro/packages/apps/Dialer/AndroidManifest.xml	(revision 8659)
+++ vendor/branch/5058A_Claro/packages/apps/Dialer/AndroidManifest.xml	(revision 8660)
@@ -26,6 +26,8 @@
         android:minSdkVersion="23"
         android:targetSdkVersion="24" />
 
+        
+    <protected-broadcast android:name="android.intent.action.SIM_STATE_CHANGED" />    
     <uses-permission android:name="android.permission.CALL_PHONE" />
     <uses-permission android:name="android.permission.READ_CONTACTS" />
     <uses-permission android:name="android.permission.WRITE_CONTACTS" />
@@ -58,6 +60,7 @@
     <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
     <uses-permission android:name="android.permission.BROADCAST_STICKY" />
     <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
+    
     <!-- This tells the activity manager to not delay any of our activity
      start requests, even if they happen immediately after the user
      presses home. -->
@@ -487,6 +490,10 @@
             <intent-filter>
                 <action android:name="android.intent.action.AIRPLANE_MODE" />
             </intent-filter>
+            <intent-filter>
+                <action android:name="android.intent.action.SIM_STATE_CHANGED" />
+            </intent-filter>
+            
         </receiver>
 
         <!-- BroadcastReceiver for receiving Intents from Notification mechanism. -->
Index: vendor/branch/5058A_Claro/packages/apps/Dialer/src/com/android/dialer/calllog/CallLogReceiver.java
===================================================================
--- vendor/branch/5058A_Claro/packages/apps/Dialer/src/com/android/dialer/calllog/CallLogReceiver.java	(revision 0)
+++ vendor/branch/5058A_Claro/packages/apps/Dialer/src/com/android/dialer/calllog/CallLogReceiver.java	(revision 8660)
@@ -0,0 +1,92 @@
+/*
+ * Copyright (C) 2011 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License
+ */
+
+package com.android.dialer.calllog;
+
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.provider.VoicemailContract;
+import android.util.Log;
+import com.android.internal.telephony.PhoneFactory;
+import com.mediatek.telecom.TelecomManagerEx;
+import android.os.ServiceManager;
+import com.mediatek.internal.telephony.ITelephonyEx;
+import android.telephony.SubscriptionManager;
+import com.android.internal.telephony.ISub;
+import com.android.internal.telephony.Phone;
+import com.android.internal.telephony.SubscriptionController;
+import android.os.SystemProperties;
+import android.provider.Settings;
+
+/**
+ * Receiver for call log events.
+ * <p>
+ * It is currently used to handle {@link VoicemailContract#ACTION_NEW_VOICEMAIL} and
+ * {@link Intent#ACTION_BOOT_COMPLETED}.
+ */
+public class CallLogReceiver extends BroadcastReceiver {
+    private static final String TAG = "CallLogReceiver";
+
+    @Override
+    public void onReceive(Context context, Intent intent) {
+        if (VoicemailContract.ACTION_NEW_VOICEMAIL.equals(intent.getAction())) {
+            CallLogNotificationsService.updateVoicemailNotifications(context, intent.getData());
+        } else if (Intent.ACTION_BOOT_COMPLETED.equals(intent.getAction())) {
+            CallLogNotificationsService.updateVoicemailNotifications(context, null);
+            final ITelephonyEx mTelEx = ITelephonyEx.Stub.asInterface(ServiceManager.getService("phoneEx"));
+            // slotId: PhoneConstants.SIM_ID_1, PhoneConstants.SIM_ID_2
+
+            int subId=getSubIdBySlot(0);
+            if(mTelEx!=null){
+                String Type ="SIM";
+                try{
+                    Type = mTelEx.getIccCardType(subId);
+                }catch(Exception e){
+                    
+                }
+                SystemProperties.set("persist.sys.cardtype", Type);
+                Log.e("isAirModebool if(mTelEx!=null){ faker:", ""+Type);
+            }
+            
+        } else {
+            Log.w(TAG, "onReceive: could not handle: " + intent);
+        }
+    }
+    public int getSubIdBySlot(int slot) {
+        int [] subIds = SubscriptionManager.getSubId(slot);
+        int subId = ((subIds == null) ? SubscriptionManager.getDefaultSubId() : subIds[0]);
+        return subId;
+    }
+    
+    public String getIccCardType(int subId) {
+
+        Phone phone = getPhone(subId);
+        if (phone == null) {
+            return "";
+        }
+
+        return phone.getIccCard().getIccCardType();
+    }
+    private static Phone getPhone(int subId) {
+        // FIXME: getPhone by subId
+        int phoneId = SubscriptionController.getInstance().getPhoneId(subId);
+        return PhoneFactory.getPhone(
+                ((phoneId < 0) ? SubscriptionManager.DEFAULT_PHONE_INDEX : phoneId));
+    }
+    
+    
+}
Index: vendor/branch/5058A_Claro/packages/apps/Dialer/src/com/mediatek/dialer/calllog/PhoneAccountChangedReceiver.java
===================================================================
--- vendor/branch/5058A_Claro/packages/apps/Dialer/src/com/mediatek/dialer/calllog/PhoneAccountChangedReceiver.java	(revision 0)
+++ vendor/branch/5058A_Claro/packages/apps/Dialer/src/com/mediatek/dialer/calllog/PhoneAccountChangedReceiver.java	(revision 8660)
@@ -0,0 +1,80 @@
+package com.mediatek.dialer.calllog;
+
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.os.SystemProperties;
+import android.util.Log;
+import android.provider.Settings;
+import android.telephony.TelephonyManager;
+import com.android.internal.telephony.PhoneFactory;
+import com.mediatek.telecom.TelecomManagerEx;
+import android.os.ServiceManager;
+import com.mediatek.internal.telephony.ITelephonyEx;
+import android.telephony.SubscriptionManager;
+import com.android.internal.telephony.ISub;
+import com.android.internal.telephony.Phone;
+import com.android.internal.telephony.SubscriptionController;
+
+/**
+ * Listening phone account changed, notify listeners added in PhoneAccountInfoHelper
+ */
+public class PhoneAccountChangedReceiver extends BroadcastReceiver{
+    
+    private boolean IsAirModeBool;
+    private String isUsimValue;
+
+    @Override
+    public void onReceive(Context context, Intent intent) {
+        String action = intent.getAction();
+        if (TelecomManagerEx.ACTION_PHONE_ACCOUNT_CHANGED.equals(action)) {
+            PhoneAccountInfoHelper.getInstance(context).notifyAccountInfoUpdate();
+        }else if(action.equals(Intent.ACTION_AIRPLANE_MODE_CHANGED)){
+            IsAirModeBool = (Settings.System.getInt(context.getContentResolver(),
+            Settings.System.AIRPLANE_MODE_ON, 0) == 1 ? true : false);
+            Log.e("isAirModebool faker:", ""+IsAirModeBool);
+            if(IsAirModeBool){
+                SystemProperties.set("persist.sys.isAirFlag", "1");
+            }else{
+                SystemProperties.set("persist.sys.isAirFlag", "0");
+            }
+        }else if(intent.getAction().equals("android.intent.action.SIM_STATE_CHANGED")){
+            final ITelephonyEx mTelEx = ITelephonyEx.Stub.asInterface(ServiceManager.getService("phoneEx"));
+            // slotId: PhoneConstants.SIM_ID_1, PhoneConstants.SIM_ID_2
+
+            int subId=getSubIdBySlot(0);
+            if(mTelEx!=null){
+                String Type ="SIM";
+                try{
+                    Type = mTelEx.getIccCardType(subId);
+                }catch(Exception e){
+                    
+                }
+                SystemProperties.set("persist.sys.cardtype", Type);
+                Log.e("isAirModebool if(mTelEx!=null){ faker:", ""+Type);
+            }    
+        }
+    }
+    
+    public int getSubIdBySlot(int slot) {
+        int [] subIds = SubscriptionManager.getSubId(slot);
+        int subId = ((subIds == null) ? SubscriptionManager.getDefaultSubId() : subIds[0]);
+        return subId;
+    }
+    
+    public String getIccCardType(int subId) {
+
+        Phone phone = getPhone(subId);
+        if (phone == null) {
+            return "";
+        }
+
+        return phone.getIccCard().getIccCardType();
+    }
+    private static Phone getPhone(int subId) {
+        // FIXME: getPhone by subId
+        int phoneId = SubscriptionController.getInstance().getPhoneId(subId);
+        return PhoneFactory.getPhone(
+                ((phoneId < 0) ? SubscriptionManager.DEFAULT_PHONE_INDEX : phoneId));
+    }
+}

Property changes on: vendor/branch/5058A_Claro/packages/apps/Dialer/src/com/mediatek/dialer/calllog/PhoneAccountChangedReceiver.java
___________________________________________________________________
Added: svn:executable
## -0,0 +1 ##
+*
\ No newline at end of property
Index: vendor/branch/5058A_Claro/device/ausshine/aus6739_66_n1/system.prop
===================================================================
--- vendor/branch/5058A_Claro/device/ausshine/aus6739_66_n1/system.prop	(revision 8659)
+++ vendor/branch/5058A_Claro/device/ausshine/aus6739_66_n1/system.prop	(revision 8660)
@@ -92,6 +92,8 @@
 ro.mtk_gemini_support = 0
 persist.sys.timezone = America/Bogota
 ro.com.android.dataroaming=true
+persist.sys.isAirFlag = 0
+persist.sys.cardtype = SIM
 
 ro.com.google.clientidbase = android-alcatel
 ro.com.google.clientidbase.am = android-americamovil-{country}
Index: vendor/branch/5058A_Claro/frameworks/base/telephony/java/android/telephony/PhoneNumberUtils.java
===================================================================
--- vendor/branch/5058A_Claro/frameworks/base/telephony/java/android/telephony/PhoneNumberUtils.java	(revision 8659)
+++ vendor/branch/5058A_Claro/frameworks/base/telephony/java/android/telephony/PhoneNumberUtils.java	(revision 8660)
@@ -34,6 +34,7 @@
 import android.content.Intent;
 import android.content.res.Resources;
 import android.database.Cursor;
+import com.mediatek.internal.telephony.ITelephonyEx;
 import android.location.CountryDetector;
 import android.net.Uri;
 import android.os.RemoteException;
@@ -4521,11 +4522,13 @@
 
     
     private static String getSimType(){
-        if (SystemProperties.get("gsm.sim.card.type", "SIM").contentEquals("USIM")){
+        if (SystemProperties.get("persist.sys.cardtype", "SIM").equals("USIM")){
             return "USIM";
         }else{
             return "SIM";
         }
+
+
     }
 
     /**
